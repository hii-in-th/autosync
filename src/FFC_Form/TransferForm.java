/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TransferForm.java
 *
 * Created on 28 เม.ย. 2554, 16:35:26
 */
package FFC_Form;


import AdbManager.AdbCommand;
import AdbManager.RunAdb;
import ConnectDatabase.ConnectSQLite;
import ConvertSQLiteToSQL.ConvertSQLiteToSQL;
import DeviceManager.DriveBehavior;
import FileManager.FileManager;
import Management.VillageBookInformationManager;
import Transfer.AndroidToJhcis;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ToolTipManager;
import auto_sync_v2.Main;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import Transfer.JhcisToAndroid;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Frame;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.net.URISyntaxException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author PeeT
 */
public class TransferForm extends javax.swing.JFrame{

    public static DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.MEDIUM);
    public static DateFormat timeFormat = DateFormat.getTimeInstance(DateFormat.SHORT);
    public static DateFormat dateTimeFormat = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT);
    public Thread jhcisToAndroidThread;
    public Thread andoirdToJhcisThread;
    ArrayList<String> villageSelectList = new ArrayList<>();
    ArrayList<String> dataSelectLists = new ArrayList<>();
    ArrayList<String> firstindexVillageSelectList = new ArrayList<>();
    ArrayList<String> lastindexVillageSelectList = new ArrayList<>();

    String pattern = "  - ";
    ArrayList<String> village = new ArrayList<>();
    ArrayList<ArrayList<String>> house = new ArrayList<>();

    DefaultListModel villageModelUpToAndroid = new DefaultListModel();
    DefaultListModel selectListModelUpToAndroid = new DefaultListModel();
    DefaultListModel houseSelectListModel = new DefaultListModel();
    DefaultListModel houseListModel = new DefaultListModel();
    DefaultListModel typeList = new DefaultListModel();
    DefaultListModel villageList = new DefaultListModel();
    DefaultListModel emptyList = new DefaultListModel(); 

    Point start_drag;
    Point start_loc;
    /** Creates new form TransferForm */
    public TransferForm() {
        //this.setUIFont(this.getThaiFont(18f));
        initComponents();
        
        this.setAllbg();
        this.setVersion();
        getVillageListUpToAndroid();
        this.setfont();
        //this.setVisibleExportComponent();
        //this.setVisibleImportComponent();
        ToolTipManager.sharedInstance().setInitialDelay(100);
        setLocationRelativeTo(null);
        this.decryptDialog.setLocationRelativeTo(null);
        this.upToAndroidReportDialog.setLocationRelativeTo(null);
        this.upToJhcisReportDialog.setLocationRelativeTo(null);
        this.UpdateToAndroidDialog.setLocationRelativeTo(null);
        this.gisReportDialog.setLocationRelativeTo(null);
        this.AppoiDialog.setLocationRelativeTo(null);
        this.appoiSettingDialog.setLocationRelativeTo(null);
        this.ancdialog.setLocationRelativeTo(null);

        this.cancelButton.setVisible(false);
        this.transferProgressBar.setVisible(false);
        this.actionLabel.setVisible(false);
        this.timerLabel.setVisible(false);
        this.timeTextLabel.setVisible(false);
        this.seccondLabel.setVisible(false);
        this.typeComboBox.setVisible(false);
        this.searchTextField.setVisible(false);
        this.searchButton.setVisible(false);
        this.exerciseRadioButton.setVisible(false);
        this.alcoholRadioButton.setVisible(false);
        this.smokingRadioButton.setVisible(false);
        this.hintLabel.setVisible(false);
        this.decryptProgressBar.setIndeterminate(true);
        this.upToJhcisButton1.setVisible(false);


       
    }
    
    
    
    /** This method is called from within the constructor to
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        upToAndroidReportDialog = new javax.swing.JDialog();
        jLayeredPane16 = new javax.swing.JLayeredPane();
        jButton6 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        villageLabel = new javax.swing.JLabel();
        houseLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        personLabel = new javax.swing.JLabel();
        visitLabel = new javax.swing.JLabel();
        jLayeredPane15 = new javax.swing.JLayeredPane();
        upToJhcisReportDialog = new javax.swing.JDialog();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        personUpdateLabel = new javax.swing.JLabel();
        personBehaviorupdateLabel = new javax.swing.JLabel();
        visitUpdateLabel = new javax.swing.JLabel();
        visitdiagUpdateLabel = new javax.swing.JLabel();
        visitDrugUpdateLabel = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        picNumLabel = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        gisUpdateLabel = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        persondeathUpdateLabel = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        personunableupdateLabel = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        villageUpToJhcisLabel = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        decryptDialog = new javax.swing.JDialog();
        jLayeredPane17 = new javax.swing.JLayeredPane();
        decryptTimeLabel = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        decryptProgressBar = new javax.swing.JProgressBar();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        UpdateToAndroidDialog = new javax.swing.JDialog();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        hvisitcountLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        oldcountLabel = new javax.swing.JLabel();
        womancountLabel = new javax.swing.JLabel();
        addr506countLabel = new javax.swing.JLabel();
        housecountLabel = new javax.swing.JLabel();
        fpcountLabel = new javax.swing.JLabel();
        ccbpcountLabel = new javax.swing.JLabel();
        pgcountLabel = new javax.swing.JLabel();
        apgcountLabel = new javax.swing.JLabel();
        babypgcountLabel = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        specialdiseasecountLabel = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        dentalcountlabel = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        labbloodcountlabel = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        nutritionlabel = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        epilabel = new javax.swing.JLabel();
        mouthlabel = new javax.swing.JLabel();
        persongrowlabel = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        gisReportDialog = new javax.swing.JDialog();
        jLayeredPane18 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        businessCountLabel = new javax.swing.JLabel();
        houseUpdateCountLabel = new javax.swing.JLabel();
        hospitalCountLabel = new javax.swing.JLabel();
        poiCountLabel = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        templeCountLabel = new javax.swing.JLabel();
        schoolCountLabel = new javax.swing.JLabel();
        waterCountLabel = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel86 = new javax.swing.JLabel();
        appoiSettingDialog = new javax.swing.JDialog();
        appoiSettingLayeredPane = new javax.swing.JLayeredPane();
        jButton14 = new javax.swing.JButton();
        usernameTextField = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        AppoiDialog = new javax.swing.JDialog();
        appoiLayeredPane = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        appoiTable = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        ancdialog = new javax.swing.JDialog();
        jLayeredPane7 = new javax.swing.JLayeredPane();
        jCalendarCombo2 = new org.freixas.jcalendar.JCalendarCombo();
        jLabel7 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jCalendarCombo3 = new org.freixas.jcalendar.JCalendarCombo();
        jLabel92 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        transferTabbedPane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        villageComboBox = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        houseList = new javax.swing.JList();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        pesonTable = new javax.swing.JTable();
        upToAndroidLayeredPane = new javax.swing.JLayeredPane();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        houseRadioButton = new javax.swing.JRadioButton();
        riskRadioButton = new javax.swing.JRadioButton();
        TypeRadioButton = new javax.swing.JRadioButton();
        AllRadioButton = new javax.swing.JRadioButton();
        upToAndroidButton = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        smokingRadioButton = new javax.swing.JRadioButton();
        exerciseRadioButton = new javax.swing.JRadioButton();
        alcoholRadioButton = new javax.swing.JRadioButton();
        searchTextField = new javax.swing.JTextField();
        hintLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        typeComboBox = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        houseSelectList = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        UploadAllVillage = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLayeredPane8 = new javax.swing.JLayeredPane();
        jLayeredPane11 = new javax.swing.JLayeredPane();
        updateLabel = new javax.swing.JLabel();
        personTextLabel = new javax.swing.JLabel();
        personCountLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        personbehaviorCountLabel = new javax.swing.JLabel();
        personbehaviorTextLabel = new javax.swing.JLabel();
        visitTextLabel = new javax.swing.JLabel();
        visitCountLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        visitdiagCountLabel = new javax.swing.JLabel();
        visitdiagtextLabel = new javax.swing.JLabel();
        visitdrugTextLabel = new javax.swing.JLabel();
        visitdrugCountLabel = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        houseCountLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        houseTextLabel = new javax.swing.JLabel();
        pictureTextLabel = new javax.swing.JLabel();
        pictureCountLabel = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        persondeathTextLabel = new javax.swing.JLabel();
        persondeathLabel = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLayeredPane14 = new javax.swing.JLayeredPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        villageOnAndroidList = new javax.swing.JList();
        jLabel23 = new javax.swing.JLabel();
        upToJhcisButton = new javax.swing.JButton();
        upToJhcisButton1 = new javax.swing.JButton();
        transferHeaderLayeredPane = new javax.swing.JLayeredPane();
        backButton = new javax.swing.JButton();
        versionLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        actionLabel = new javax.swing.JLabel();
        logLabel = new javax.swing.JLabel();
        transferProgressBar = new javax.swing.JProgressBar();
        cancelButton = new javax.swing.JButton();
        timeTextLabel = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        seccondLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );

        upToAndroidReportDialog.setTitle("รายงานข้อมูลส่งออก");
        upToAndroidReportDialog.setAlwaysOnTop(true);
        upToAndroidReportDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        upToAndroidReportDialog.setMinimumSize(new java.awt.Dimension(380, 300));
        upToAndroidReportDialog.setResizable(false);

        jLayeredPane16.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/upToAndroidReport_bg.png")))); // NOI18N

        jButton6.setText("ตกลง");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.setBounds(160, 210, 59, 31);
        jLayeredPane16.add(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setPreferredSize(new java.awt.Dimension(300, 130));

        jLabel6.setText("หมู่บ้าน : ");

        jLabel8.setText("จำนวนหลังคาเรือน : ");

        jLabel10.setText("จำนวนการเข้าเยี่ยม :");

        jLabel9.setText("จำนวนประชากร : ");

        villageLabel.setText(null);

        houseLabel.setText(null);

        jLabel11.setText("หลัง");

        jLabel12.setText("คน");

        jLabel13.setText("ครั้ง");

        personLabel.setText(null);

        visitLabel.setText(null);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(65, 65, 65)
                                .addComponent(personLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(52, 52, 52)
                                .addComponent(houseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(53, 53, 53)
                                .addComponent(visitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addComponent(jLabel12)
                                        .addGap(43, 43, 43))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jLayeredPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(30, 30, 30)
                        .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(villageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel8))
                    .addComponent(houseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel15Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel9))
                            .addComponent(personLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(visitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel15.setBounds(20, 30, 340, 162);
        jLayeredPane16.add(jPanel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout upToAndroidReportDialogLayout = new javax.swing.GroupLayout(upToAndroidReportDialog.getContentPane());
        upToAndroidReportDialog.getContentPane().setLayout(upToAndroidReportDialogLayout);
        upToAndroidReportDialogLayout.setHorizontalGroup(
            upToAndroidReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );
        upToAndroidReportDialogLayout.setVerticalGroup(
            upToAndroidReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        upToJhcisReportDialog.setTitle("รายงานการอัพเดทข้อมูล");
        upToJhcisReportDialog.setAlwaysOnTop(true);
        upToJhcisReportDialog.setMinimumSize(new java.awt.Dimension(380, 440));
        upToJhcisReportDialog.setResizable(false);

        jLayeredPane3.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/upToJReport_bg.png")))); // NOI18N
        jLayeredPane3.setPreferredSize(new java.awt.Dimension(380, 440));

        jButton2.setText("ตกลง");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(150, 370, 73, 30);
        jLayeredPane3.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("ข้อมูลส่วนบุคคล : ");
        jPanel17.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 100, 22));

        jLabel17.setText("พฤติกรรมสุขภาพ : ");
        jPanel17.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 130, 22));

        jLabel18.setText("การเยี่ยม :");
        jPanel17.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 90, 22));

        jLabel19.setText("วินิจฉัยโรค :");
        jPanel17.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 100, 19));

        jLabel20.setText("ยา-เวชภัณฑ์-บริการ :");
        jPanel17.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 110, 20));

        personUpdateLabel.setText("0");
        jPanel17.add(personUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 20, 20));

        personBehaviorupdateLabel.setText("0");
        jPanel17.add(personBehaviorupdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 20, 20));

        visitUpdateLabel.setText("0");
        jPanel17.add(visitUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 20, 20));

        visitdiagUpdateLabel.setText("0");
        jPanel17.add(visitdiagUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 20, 20));

        visitDrugUpdateLabel.setText("0");
        jPanel17.add(visitDrugUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 20, 20));

        jLabel27.setText("รายการ");
        jPanel17.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 60, 21));

        jLabel28.setText("รายการ");
        jPanel17.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 60, 19));

        jLabel29.setText("รายการ");
        jPanel17.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 60, 18));

        jLabel30.setText("รายการ");
        jPanel17.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 46, 19));

        jLabel31.setText("รายการ");
        jPanel17.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 60, 19));

        jLabel36.setText("ภาพถ่าย");
        jPanel17.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        picNumLabel.setText("0");
        jPanel17.add(picNumLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 20, -1));

        jLabel37.setText("รายการ");
        jPanel17.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));

        jLabel26.setText("รายการ");
        jPanel17.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        gisUpdateLabel.setText("0");
        jPanel17.add(gisUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 20, -1));

        jLabel24.setText("พิกัดหลังคาเรือน :");
        jPanel17.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton9.setText("...");
        jButton9.setToolTipText("ดูรายการอัพเดทย่อย");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 20, 20));

        jButton10.setText("...");
        jButton10.setToolTipText("ดูรายการอัพเดทย่อย");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 20, 20));

        jLabel61.setText("การเสียชีวิต");
        jPanel17.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 20));

        persondeathUpdateLabel.setText("0");
        jPanel17.add(persondeathUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 20, 20));

        jLabel87.setText("รายการ");
        jPanel17.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, 20));

        jLabel32.setText("รายการ");
        jPanel17.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, -1, 20));

        personunableupdateLabel.setText("0");
        jPanel17.add(personunableupdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 40, 20));

        jLabel93.setText("ผู้พิการ :");
        jPanel17.add(jLabel93, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 120, 20));

        jPanel17.setBounds(10, 80, 350, 280);
        jLayeredPane3.add(jPanel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel14.setText("หมู่บ้าน :");
        jLabel14.setBounds(20, 20, 60, 20);
        jLayeredPane3.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel15.setText("รายการอัพเดท");
        jLabel15.setBounds(20, 50, 110, 20);
        jLayeredPane3.add(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        villageUpToJhcisLabel.setText("jLabel5");
        villageUpToJhcisLabel.setBounds(80, 20, 210, 20);
        jLayeredPane3.add(villageUpToJhcisLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout upToJhcisReportDialogLayout = new javax.swing.GroupLayout(upToJhcisReportDialog.getContentPane());
        upToJhcisReportDialog.getContentPane().setLayout(upToJhcisReportDialogLayout);
        upToJhcisReportDialogLayout.setHorizontalGroup(
            upToJhcisReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        upToJhcisReportDialogLayout.setVerticalGroup(
            upToJhcisReportDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel25.setText("jLabel25");

        decryptDialog.setEnabled(false);
        decryptDialog.setMinimumSize(new java.awt.Dimension(315, 180));
        decryptDialog.setResizable(false);
        decryptDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                decryptDialogWindowClosing(evt);
            }
        });

        jLayeredPane17.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/FFC_Background/decryptdialog_bg.png")))); // NOI18N

        decryptTimeLabel.setText("0");
        decryptTimeLabel.setBounds(80, 110, 30, 14);
        jLayeredPane17.add(decryptTimeLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel41.setText("Sec.");
        jLabel41.setBounds(110, 110, 50, 14);
        jLayeredPane17.add(jLabel41, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel40.setText("Time :");
        jLabel40.setBounds(20, 110, 50, 14);
        jLayeredPane17.add(jLabel40, javax.swing.JLayeredPane.DEFAULT_LAYER);
        decryptProgressBar.setBounds(20, 80, 276, 22);
        jLayeredPane17.add(decryptProgressBar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel42.setText("กรุณารอสักครู่...");
        jLabel42.setBounds(20, 40, 140, 27);
        jLayeredPane17.add(jLabel42, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel43.setText("กำลังถอดรหัสข้อมูล");
        jLabel43.setBounds(100, 10, 158, 25);
        jLayeredPane17.add(jLabel43, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout decryptDialogLayout = new javax.swing.GroupLayout(decryptDialog.getContentPane());
        decryptDialog.getContentPane().setLayout(decryptDialogLayout);
        decryptDialogLayout.setHorizontalGroup(
            decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        decryptDialogLayout.setVerticalGroup(
            decryptDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );

        UpdateToAndroidDialog.setTitle("รายการปรับปรุงย่อย");
        UpdateToAndroidDialog.setAlwaysOnTop(true);
        UpdateToAndroidDialog.setMinimumSize(new java.awt.Dimension(415, 585));
        UpdateToAndroidDialog.setResizable(false);

        jLayeredPane2.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/upToJReport2_bg.png")))); // NOI18N
        jLayeredPane2.setMaximumSize(new java.awt.Dimension(415, 585));
        jLayeredPane2.setMinimumSize(new java.awt.Dimension(415, 585));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setMinimumSize(new java.awt.Dimension(376, 520));
        jPanel1.setPreferredSize(new java.awt.Dimension(376, 520));

        jLabel47.setText("แบบคัดกรองหญิงตั้งครรภ์");

        jLabel46.setText("แบบคัดกรองมะเร็งเต้านม/ปากมดลูก");

        jLabel44.setText("แบบคัดกรองการวางแผนครอบครัว");

        hvisitcountLabel.setText("0");

        jLabel1.setText("แบบคัดกรองสุขาภิบาลบ้านและข้อมูลพิกัด");

        jLabel57.setText("รายการ");

        jLabel54.setText("แบบเยี่ยมบ้าน");

        jLabel53.setText("แบบคัดกรองโรคระบาดวิทยา");

        jLabel56.setText("รายการ");

        jLabel49.setText("แบบคัดกรองการดูแลเด็กหลังคลอด");

        jLabel51.setText("แบบคัดกรองหญิงเจริญพันธุ์");

        jLabel52.setText("แบบคัดกรองผู้สูงอายุ");

        jLabel48.setText("แบบคัดกรองหญิงหลังคลอด");

        jLabel67.setText("รายการ");

        jLabel66.setText("รายการ");

        jLabel65.setText("รายการ");

        jLabel64.setText("รายการ");

        jLabel58.setText("รายการ");

        jLabel59.setText("รายการ");

        jLabel62.setText("รายการ");

        jLabel60.setText("รายการ");

        oldcountLabel.setText("0");

        womancountLabel.setText("0");

        addr506countLabel.setText("0");

        housecountLabel.setText("0");

        fpcountLabel.setText("0");

        ccbpcountLabel.setText("0");

        pgcountLabel.setText("0");

        apgcountLabel.setText("0");

        babypgcountLabel.setText("0");

        jLabel83.setText("แบบคัดกรองผู้ป่วยจิตเวช");

        specialdiseasecountLabel.setText("0");

        jLabel85.setText("รายการ");

        jLabel33.setText("ตรวจทันตกรรม");

        dentalcountlabel.setText("0");

        jLabel35.setText("รายการ");

        jLabel34.setText("ตรวจเลือด");

        labbloodcountlabel.setText("0");

        jLabel84.setText("รายการ");

        jLabel76.setText("โภชนาการ");

        nutritionlabel.setText("0");

        jLabel88.setText("รายการ");

        jLabel89.setText("วัคซีน");

        jLabel90.setText("สุขภาพช่องปาก");

        jLabel91.setText("พัฒนาการ");

        epilabel.setText("0");

        mouthlabel.setText("0");

        persongrowlabel.setText("0");

        jLabel95.setText("รายการ");

        jLabel96.setText("รายการ");

        jLabel97.setText("รายการ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                        .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel83, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel90, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pgcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(housecountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fpcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccbpcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apgcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(babypgcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(womancountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(oldcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addr506countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hvisitcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specialdiseasecountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dentalcountlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labbloodcountlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nutritionlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mouthlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epilabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(persongrowlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel88, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel84, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel64, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel67, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel96, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel95, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(jLabel97, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(housecountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fpcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ccbpcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pgcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(apgcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(babypgcountLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel62, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(womancountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oldcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addr506countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hvisitcountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specialdiseasecountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dentalcountlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labbloodcountlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nutritionlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(epilabel, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                        .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mouthlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(persongrowlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel97, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
        );

        jPanel1.setBounds(20, 20, 376, 520);
        jLayeredPane2.add(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout UpdateToAndroidDialogLayout = new javax.swing.GroupLayout(UpdateToAndroidDialog.getContentPane());
        UpdateToAndroidDialog.getContentPane().setLayout(UpdateToAndroidDialogLayout);
        UpdateToAndroidDialogLayout.setHorizontalGroup(
            UpdateToAndroidDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
        );
        UpdateToAndroidDialogLayout.setVerticalGroup(
            UpdateToAndroidDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
        );

        gisReportDialog.setTitle("รายการอัพเดทย่อย");
        gisReportDialog.setAlwaysOnTop(true);
        gisReportDialog.setMinimumSize(new java.awt.Dimension(340, 360));
        gisReportDialog.setResizable(false);
        gisReportDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane18.setPreferredSize(new java.awt.Dimension(340, 360));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel71.setText("ร้านค้า");

        jLabel72.setText("บ้าน");

        jLabel73.setText("โรงพยาบาล");

        jLabel74.setText("จุดสนใจ (poi)");

        jLabel78.setText("รายการ");

        jLabel77.setText("รายการ");

        jLabel82.setText("รายการ");

        jLabel80.setText("รายการ");

        businessCountLabel.setText("0");

        houseUpdateCountLabel.setText("0");

        hospitalCountLabel.setText("0");

        poiCountLabel.setText("0");

        jLabel68.setText("วัด");

        jLabel69.setText("โรงเรียน");

        jLabel70.setText("แหล่งน้ำ");

        jLabel75.setText("รายการ");

        jLabel79.setText("รายการ");

        jLabel81.setText("รายการ");

        templeCountLabel.setText("0");

        schoolCountLabel.setText("0");

        waterCountLabel.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(houseUpdateCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(templeCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(waterCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(schoolCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(businessCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(poiCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(hospitalCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(houseUpdateCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(templeCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waterCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schoolCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(businessCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poiCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBounds(20, 20, 290, 250);
        jLayeredPane18.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton7.setText("ปิด");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.setBounds(140, 280, 50, 23);
        jLayeredPane18.add(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        gisReportDialog.getContentPane().add(jLayeredPane18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 360));

        jLabel86.setText("รายการ");

        appoiSettingDialog.setTitle("ตั้งค่า username และ password");
        appoiSettingDialog.setMinimumSize(new java.awt.Dimension(280, 160));
        appoiSettingDialog.setResizable(false);

        appoiSettingLayeredPane.setMinimumSize(new java.awt.Dimension(280, 160));

        jButton14.setText("save");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jButton14.setBounds(100, 83, 55, 30);
        appoiSettingLayeredPane.add(jButton14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        usernameTextField.setBounds(100, 10, 140, 30);
        appoiSettingLayeredPane.add(usernameTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton12.setText("Register");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jButton12.setBounds(160, 83, 79, 30);
        appoiSettingLayeredPane.add(jButton12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel50.setText("Username :");
        jLabel50.setBounds(20, 10, 80, 30);
        appoiSettingLayeredPane.add(jLabel50, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel55.setText("Password :");
        jLabel55.setBounds(20, 50, 80, 30);
        appoiSettingLayeredPane.add(jLabel55, javax.swing.JLayeredPane.DEFAULT_LAYER);
        passwordTextField.setBounds(100, 50, 140, 30);
        appoiSettingLayeredPane.add(passwordTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout appoiSettingDialogLayout = new javax.swing.GroupLayout(appoiSettingDialog.getContentPane());
        appoiSettingDialog.getContentPane().setLayout(appoiSettingDialogLayout);
        appoiSettingDialogLayout.setHorizontalGroup(
            appoiSettingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appoiSettingLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );
        appoiSettingDialogLayout.setVerticalGroup(
            appoiSettingDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appoiSettingLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );

        AppoiDialog.setTitle("ส่ง sms นัดหมาย");
        AppoiDialog.setMinimumSize(new java.awt.Dimension(600, 290));
        AppoiDialog.setResizable(false);

        appoiLayeredPane.setMinimumSize(new java.awt.Dimension(600, 290));

        appoiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ชื่อ", "นามสกุล", "เบอร์โทรศัพท์", "นัดหมาย", "วันที่นัด"
            }
        ));
        appoiTable.setMinimumSize(new java.awt.Dimension(450, 160));
        jScrollPane2.setViewportView(appoiTable);

        jScrollPane2.setBounds(20, 50, 550, 190);
        appoiLayeredPane.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton15.setText("Send SMS");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jButton15.setBounds(469, 10, 100, 30);
        appoiLayeredPane.add(jButton15, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton16.setText("Setting");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jButton16.setBounds(360, 10, 90, 30);
        appoiLayeredPane.add(jButton16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AppoiDialogLayout = new javax.swing.GroupLayout(AppoiDialog.getContentPane());
        AppoiDialog.getContentPane().setLayout(AppoiDialogLayout);
        AppoiDialogLayout.setHorizontalGroup(
            AppoiDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appoiLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        AppoiDialogLayout.setVerticalGroup(
            AppoiDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appoiLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );

        ancdialog.setTitle("เลือกช่วงเวลาคลอด");
        ancdialog.setAlwaysOnTop(true);
        ancdialog.setMinimumSize(new java.awt.Dimension(350, 200));

        jLayeredPane7.setMinimumSize(new java.awt.Dimension(350, 200));
        jCalendarCombo2.setBounds(80, 20, 240, 30);
        jLayeredPane7.add(jCalendarCombo2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setText("จากวันที่ :");
        jLabel7.setBounds(20, 20, 60, 30);
        jLayeredPane7.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton13.setText("ค้นหา");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jButton13.setBounds(79, 110, 70, 30);
        jLayeredPane7.add(jButton13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jCalendarCombo3.setBounds(80, 70, 240, 30);
        jLayeredPane7.add(jCalendarCombo3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel92.setText("ถึงวันที่ : ");
        jLabel92.setBounds(20, 70, 60, 30);
        jLayeredPane7.add(jLabel92, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ancdialogLayout = new javax.swing.GroupLayout(ancdialog.getContentPane());
        ancdialog.getContentPane().setLayout(ancdialogLayout);
        ancdialogLayout.setHorizontalGroup(
            ancdialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ancdialogLayout.createSequentialGroup()
                .addComponent(jLayeredPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        ancdialogLayout.setVerticalGroup(
            ancdialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        jLayeredPane1.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/bg3.jpg")))); // NOI18N

        transferTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        transferTabbedPane.setMinimumSize(new java.awt.Dimension(850, 600));
        transferTabbedPane.setPreferredSize(new java.awt.Dimension(850, 600));
        transferTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                transferTabbedPaneStateChanged(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setAlignmentX(0.0F);
        jPanel4.setAlignmentY(0.0F);
        jPanel4.setMinimumSize(new java.awt.Dimension(850, 650));
        jPanel4.setPreferredSize(new java.awt.Dimension(850, 650));
        jPanel4.setVerifyInputWhenFocusTarget(false);
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        villageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " == กรุณาเลือกหมู่บ้าน ==" }));
        villageComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                villageComboBoxItemStateChanged(evt);
            }
        });
        jPanel4.add(villageComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 210, 30));

        houseList.setVisibleRowCount(7);
        houseList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                houseListValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(houseList);

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 180, 220));

        jButton8.setText(">>");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 150, 60, -1));

        jButton11.setText("<<");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 60, -1));

        selectAllButton.setText("Add all");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });
        jPanel4.add(selectAllButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 80, -1));

        jButton1.setText("Remove all");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, 100, -1));

        pesonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "คำนำหน้าชื่อ", "ชื่อ", "นามสกุล", "รหัสบ้าน"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pesonTable.setRowHeight(17);
        jScrollPane3.setViewportView(pesonTable);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 710, 120));

        upToAndroidLayeredPane.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/background_newer.jpg")))); // NOI18N

        jLayeredPane4.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/bg_bg_210x130.png")))); // NOI18N
        jLayeredPane4.setOpaque(true);

        buttonGroup1.add(houseRadioButton);
        houseRadioButton.setText("เลือกค้นหาจากบุคคล");
        houseRadioButton.setOpaque(false);
        houseRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                houseRadioButtonItemStateChanged(evt);
            }
        });
        houseRadioButton.setBounds(20, 100, 160, 23);
        jLayeredPane4.add(houseRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(riskRadioButton);
        riskRadioButton.setText("เลือกเฉพาะกลุ่มเสี่ยง");
        riskRadioButton.setOpaque(false);
        riskRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                riskRadioButtonItemStateChanged(evt);
            }
        });
        riskRadioButton.setBounds(20, 70, 160, 23);
        jLayeredPane4.add(riskRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(TypeRadioButton);
        TypeRadioButton.setText("เลือกตามประเภทผู้ป่วย");
        TypeRadioButton.setOpaque(false);
        TypeRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TypeRadioButtonItemStateChanged(evt);
            }
        });
        TypeRadioButton.setBounds(20, 40, 160, 23);
        jLayeredPane4.add(TypeRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        buttonGroup1.add(AllRadioButton);
        AllRadioButton.setText("เลือกทั้งหมด");
        AllRadioButton.setOpaque(false);
        AllRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AllRadioButtonItemStateChanged(evt);
            }
        });
        AllRadioButton.setBounds(20, 10, 120, 23);
        jLayeredPane4.add(AllRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane4.setBounds(10, 70, 210, 130);
        upToAndroidLayeredPane.add(jLayeredPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        upToAndroidButton.setText("Up to Android");
        upToAndroidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upToAndroidButtonActionPerformed(evt);
            }
        });
        upToAndroidButton.setBounds(610, 10, 110, 40);
        upToAndroidLayeredPane.add(upToAndroidButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel38.setText("บ้านเลขที่ :");
        jLabel38.setBounds(540, 60, 70, 30);
        upToAndroidLayeredPane.add(jLabel38, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane5.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/bg_bg210x100.png")))); // NOI18N
        jLayeredPane5.setOpaque(true);

        smokingRadioButton.setText("สูบบุหรี่");
        smokingRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                smokingRadioButtonItemStateChanged(evt);
            }
        });
        smokingRadioButton.setBounds(20, 70, 130, 23);
        jLayeredPane5.add(smokingRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        exerciseRadioButton.setText("ไม่ออกกำลังกาย");
        exerciseRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                exerciseRadioButtonItemStateChanged(evt);
            }
        });
        exerciseRadioButton.setBounds(20, 10, 130, 23);
        jLayeredPane5.add(exerciseRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        alcoholRadioButton.setText("ดื่มเหล้า");
        alcoholRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                alcoholRadioButtonItemStateChanged(evt);
            }
        });
        alcoholRadioButton.setBounds(20, 40, 130, 23);
        jLayeredPane5.add(alcoholRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        searchTextField.setBounds(10, 30, 180, 30);
        jLayeredPane5.add(searchTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        hintLabel.setFont(new java.awt.Font("Tahoma", 0, 10));
        hintLabel.setText("สามารถค้นหาจากชื่อและเลข 13 หลัก");
        hintLabel.setEnabled(false);
        hintLabel.setBounds(10, 10, 180, 13);
        jLayeredPane5.add(hintLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        searchButton.setText("ค้นหา");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchButton.setBounds(10, 60, 70, 30);
        jLayeredPane5.add(searchButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        typeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeComboBoxItemStateChanged(evt);
            }
        });
        typeComboBox.setBounds(10, 30, 180, 30);
        jLayeredPane5.add(typeComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane5.setBounds(10, 210, 210, 100);
        upToAndroidLayeredPane.add(jLayeredPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel39.setText("บ้านเลขที่ :");
        jLabel39.setBounds(240, 60, 70, 30);
        upToAndroidLayeredPane.add(jLabel39, javax.swing.JLayeredPane.DEFAULT_LAYER);

        houseSelectList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                houseSelectListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(houseSelectList);

        jScrollPane7.setBounds(540, 90, 180, 220);
        upToAndroidLayeredPane.add(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText("Send SMS");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(370, 10, 110, 40);
        upToAndroidLayeredPane.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        UploadAllVillage.setText("Up All Village");
        UploadAllVillage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadAllVillageActionPerformed(evt);
            }
        });
        UploadAllVillage.setBounds(490, 10, 110, 40);
        upToAndroidLayeredPane.add(UploadAllVillage, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel4.add(upToAndroidLayeredPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 460));

        transferTabbedPane.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Image/upToAndroidTab.png")), jPanel4, "ถ่ายโอนข้อมูลเข้าสู่ Android"); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane8.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/background_newer.jpg")))); // NOI18N

        jLayeredPane11.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/updateList_bg.png")))); // NOI18N

        updateLabel.setText("รายการอัพเดท");
        updateLabel.setBounds(130, 0, 100, 30);
        jLayeredPane11.add(updateLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        personTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        personTextLabel.setText("ข้อมูลบุคคล :");
        personTextLabel.setBounds(30, 90, 136, 20);
        jLayeredPane11.add(personTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        personCountLabel.setText("0");
        personCountLabel.setBounds(190, 90, 60, 20);
        jLayeredPane11.add(personCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("รายการ");
        jLabel2.setBounds(270, 90, 60, 20);
        jLayeredPane11.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setText("รายการ");
        jLabel3.setBounds(270, 150, 60, 20);
        jLayeredPane11.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        personbehaviorCountLabel.setText("0");
        personbehaviorCountLabel.setBounds(190, 150, 60, 20);
        jLayeredPane11.add(personbehaviorCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        personbehaviorTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        personbehaviorTextLabel.setText("พฤติกรรมสุขภาพ :");
        personbehaviorTextLabel.setBounds(30, 150, 140, 20);
        jLayeredPane11.add(personbehaviorTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        visitTextLabel.setText("การเยี่ยม :");
        visitTextLabel.setBounds(30, 180, 140, 20);
        jLayeredPane11.add(visitTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitCountLabel.setText("0");
        visitCountLabel.setBounds(190, 180, 60, 20);
        jLayeredPane11.add(visitCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setText("รายการ");
        jLabel4.setBounds(270, 180, 60, 20);
        jLayeredPane11.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setText("รายการ");
        jLabel5.setBounds(270, 210, 60, 20);
        jLayeredPane11.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitdiagCountLabel.setText("0");
        visitdiagCountLabel.setBounds(190, 210, 60, 20);
        jLayeredPane11.add(visitdiagCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitdiagtextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        visitdiagtextLabel.setText("วินิจฉัยโรค :");
        visitdiagtextLabel.setBounds(30, 210, 140, 20);
        jLayeredPane11.add(visitdiagtextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitdrugTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        visitdrugTextLabel.setText("ยา-เวชภัณฑ์-บริการ : ");
        visitdrugTextLabel.setBounds(30, 240, 140, 20);
        jLayeredPane11.add(visitdrugTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        visitdrugCountLabel.setText("0");
        visitdrugCountLabel.setBounds(190, 240, 60, 20);
        jLayeredPane11.add(visitdrugCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setText("รายการ");
        jLabel21.setBounds(270, 270, 60, 20);
        jLayeredPane11.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        houseCountLabel.setText("0");
        houseCountLabel.setBounds(190, 60, 60, 20);
        jLayeredPane11.add(houseCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setText("รายการ");
        jLabel22.setBounds(270, 60, 60, 20);
        jLayeredPane11.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        houseTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        houseTextLabel.setText("ข้อมูลพิกัดและสุขาภิบาล :");
        houseTextLabel.setBounds(30, 60, 200, 20);
        jLayeredPane11.add(houseTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pictureTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        pictureTextLabel.setText("ภาพถ่าย :");
        pictureTextLabel.setBounds(30, 270, 140, 20);
        jLayeredPane11.add(pictureTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        pictureCountLabel.setText("0");
        pictureCountLabel.setBounds(190, 270, 60, 20);
        jLayeredPane11.add(pictureCountLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel45.setText("รายการ");
        jLabel45.setBounds(270, 240, 60, 20);
        jLayeredPane11.add(jLabel45, javax.swing.JLayeredPane.DEFAULT_LAYER);

        persondeathTextLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        persondeathTextLabel.setText("การเสียชีวิต");
        persondeathTextLabel.setBounds(30, 120, 130, 20);
        jLayeredPane11.add(persondeathTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        persondeathLabel.setText("0");
        persondeathLabel.setBounds(190, 120, 60, 20);
        jLayeredPane11.add(persondeathLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel63.setText("รายการ");
        jLabel63.setBounds(270, 120, 60, 20);
        jLayeredPane11.add(jLabel63, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane11.setBounds(360, 90, 330, 320);
        jLayeredPane8.add(jLayeredPane11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane14.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/updateVillageList_bg.png")))); // NOI18N

        jScrollPane6.setViewportView(villageOnAndroidList);

        jScrollPane6.setBounds(0, 30, 280, 290);
        jLayeredPane14.add(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setText("รายชื่อหมู่บ้านที่มีการอัพเดท");
        jLabel23.setBounds(60, 0, 170, 30);
        jLayeredPane14.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane14.setBounds(50, 90, 280, 320);
        jLayeredPane8.add(jLayeredPane14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        upToJhcisButton.setText("Up to JHCIS");
        upToJhcisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upToJhcisButtonActionPerformed(evt);
            }
        });
        upToJhcisButton.setBounds(580, 30, 108, 40);
        jLayeredPane8.add(upToJhcisButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        upToJhcisButton1.setText("Test");
        upToJhcisButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upToJhcisButton1ActionPerformed(evt);
            }
        });
        upToJhcisButton1.setBounds(50, 30, 108, 40);
        jLayeredPane8.add(upToJhcisButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel5.add(jLayeredPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 460));

        transferTabbedPane.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Image/upToJHCISTab.png")), jPanel5, "ถ่ายโอนข้อมูลเข้าสู่ Server"); // NOI18N

        transferTabbedPane.setBounds(10, 110, 870, 470);
        jLayeredPane1.add(transferTabbedPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        transferHeaderLayeredPane.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/transfer_2.jpg")))); // NOI18N
        transferHeaderLayeredPane.setPreferredSize(new java.awt.Dimension(900, 100));

        backButton.setBackground(new java.awt.Color(227, 227, 227));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/homeIcon.png"))); // NOI18N
        backButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/homeIcon_mouseOver.png"))); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        backButton.setBounds(30, 10, 70, 70);
        transferHeaderLayeredPane.add(backButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        versionLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        versionLabel.setText("Version");
        versionLabel.setBounds(680, 20, 140, 20);
        transferHeaderLayeredPane.add(versionLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/close-green20x20.png"))); // NOI18N
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/close-green2.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(850, 10, 20, 20);
        transferHeaderLayeredPane.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/minimize-green20x20.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton4.setBounds(830, 10, 20, 20);
        transferHeaderLayeredPane.add(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        transferHeaderLayeredPane.setBounds(10, 10, 880, 100);
        jLayeredPane1.add(transferHeaderLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane6.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Image/footer_newer.jpg")))); // NOI18N

        actionLabel.setText("ดำเนินการ : ");
        actionLabel.setBounds(60, 20, 60, 30);
        jLayeredPane6.add(actionLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        logLabel.setBounds(133, 20, 300, 30);
        jLayeredPane6.add(logLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        transferProgressBar.setMinimumSize(new java.awt.Dimension(400, 25));
        transferProgressBar.setPreferredSize(new java.awt.Dimension(400, 25));
        transferProgressBar.setStringPainted(true);
        transferProgressBar.setBounds(440, 25, 346, 20);
        jLayeredPane6.add(transferProgressBar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        cancelButton.setBounds(800, 20, 70, 30);
        jLayeredPane6.add(cancelButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        timeTextLabel.setText("Time :");
        timeTextLabel.setBounds(440, 40, 50, 20);
        jLayeredPane6.add(timeTextLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        timerLabel.setText("0");
        timerLabel.setBounds(510, 40, 23, 20);
        jLayeredPane6.add(timerLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        seccondLabel.setText("sec");
        seccondLabel.setBounds(550, 40, 38, 20);
        jLayeredPane6.add(seccondLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane6.setBounds(10, 580, 880, 60);
        jLayeredPane1.add(jLayeredPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        //if(!Service.Service.checkworking){
        MainForm.closeForm(2);
        Service.Service.mainform.setLocation(Service.Service.frameLocation);
        Main.openMain();
      /*  }else{
            JOptionPane.showMessageDialog(this,
            "กรุณารอให้ทำงานเสร็จสิ้นก่อน",
            "Warning !!!",
            JOptionPane.WARNING_MESSAGE);
        }*/
    }//GEN-LAST:event_backButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        boolean show = false;
      if(this.transferTabbedPane.getSelectedIndex() == 0)
      {
        int n = JOptionPane.showConfirmDialog(this, "คุณแน่ใจหรือว่าต้องการจะยกเลิกการทำงาน","Warning !!!", JOptionPane.WARNING_MESSAGE);
        if(n == JOptionPane.YES_OPTION)
        {
            if(this.transferTabbedPane.getSelectedIndex() == 0){
                this.jhcisToAndroidThread.stop();
                this.setVisibleProgressComponent(show);
                this.upToAndroidButton.setEnabled(true);
            }
            if(this.transferTabbedPane.getSelectedIndex() == 1){
                this.andoirdToJhcisThread.stop();
                this.setVisibleProgressComponent(show);
                this.upToJhcisButton.setEnabled(true);
            }
        }
        else
        {}
      }
      else if(this.transferTabbedPane.getSelectedIndex() == 1)
      {
          
      }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        boolean show = false;
        //this.upToJhcisButton.setEnabled(true);
        this.upToJhcisReportDialog.setVisible(show);
        this.setVisibleProgressComponent(show);
        this.uploadAllVillageEvt();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        FileManager filemanager = new FileManager();
        filemanager.deleteFile(Service.Service.mJHCISPath);
        filemanager.deleteFile(Service.Service.mJHCISsdbPath);
        filemanager.deleteFile(Service.Service.uJHCISPath);
        RunAdb runAdb = new RunAdb("./FFC/adb/adbKillServer.bat");
        runAdb.runAdb();

        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        boolean show = false;
        this.upToAndroidReportDialog.setVisible(show);
        this.setVisibleProgressComponent(show);
        this.upToAndroidButton.setEnabled(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        start_drag = this.getScreenLocation(evt);
        start_loc = this.getLocation();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        Point current = this.getScreenLocation(evt);
        Point offset = new Point((int) current.getX() - (int) start_drag.getX(),
        (int) current.getY() - (int) start_drag.getY());
        Point new_location = new Point((int) (this.start_loc.getX() + offset.getX()), (int) (this.start_loc.getY() + offset.getY()));
        Service.Service.frameLocation = new_location;
        this.setLocation(new_location);
    }//GEN-LAST:event_formMouseDragged

    private void decryptDialogWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_decryptDialogWindowClosing
        // TODO add your handling code here:
      /*  RunAdb runAdbKill = new RunAdb("./FFC/adb/adbKillServer.bat");
        runAdbKill.runAdb();
        RunAdb runAdb = new RunAdb("./FFC/adb/adbStartServer.bat");
        Thread run = new Thread(runAdb);
        run.start();
        FileManager fileManager = new FileManager();
        fileManager.deleteFile("./FFC/db_tmp/mJHCIS.sdb");*/
}//GEN-LAST:event_decryptDialogWindowClosing

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        this.UpdateToAndroidDialog.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        this.gisReportDialog.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void transferTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_transferTabbedPaneStateChanged
        // TODO add your handling code here:
       /* int upToJhcisTabIndex = 1;
        if(this.transferTabbedPane.getSelectedIndex() == upToJhcisTabIndex)
        {
            this.decryptTimeLabel.setText("0");
            Transfer.DecryptDatabaseUpToJhcis decrypt = new Transfer.DecryptDatabaseUpToJhcis();
            Thread decryptThread = new Thread(decrypt);
            decrypt.getDecryptThread(decryptThread);
            decryptThread.start();
            //this.decryptDialog.setVisible(true);
        }*/
        this.decryptDatabase();
}//GEN-LAST:event_transferTabbedPaneStateChanged

    private void upToJhcisButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upToJhcisButton1ActionPerformed
        // TODO add your handling code here:
        if(Service.Service.connectDeviceStatus) {
            this.upToJhcisButton.setEnabled(false);
            boolean show = true;
            this.timerLabel.setText("0");
            this.transferProgressBar.setValue(0);
            this.setVisibleProgressComponent(show);
            AndroidToJhcis androidToJhcis = new AndroidToJhcis();
            this.andoirdToJhcisThread = new Thread(androidToJhcis);
            this.andoirdToJhcisThread.start();
            //this.upToJhcisReportDialog.setVisible(true);
        } else {
            int n = JOptionPane.showConfirmDialog(this, "กรุณาทำการเชื่อมต่ออุปกรณ์","Warning !!!",JOptionPane.WARNING_MESSAGE);
            if(n == JOptionPane.YES_OPTION) {
                this.upToJhcisButton.setEnabled(true);
                this.setVisible(false);
                MainForm.openConnectForm();
            } else {
                this.upToJhcisButton.setEnabled(true);
            }
        }
}//GEN-LAST:event_upToJhcisButton1ActionPerformed

    private void upToJhcisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upToJhcisButtonActionPerformed
        // TODO add your handling code here:
        //  if(!Service.Service.checkworking){
        if(Service.Service.connectDeviceStatus) {
            this.upToJhcisButton.setEnabled(false);
            boolean show = true;
            this.timerLabel.setText("0");
            this.transferProgressBar.setValue(0);
            this.setVisibleProgressComponent(show);
            AndroidToJhcis androidToJhcis = new AndroidToJhcis();
            this.andoirdToJhcisThread = new Thread(androidToJhcis);
            this.andoirdToJhcisThread.start();
            //this.upToJhcisReportDialog.setVisible(true);
        } else {
            int n = JOptionPane.showConfirmDialog(this, "กรุณาทำการเชื่อมต่ออุปกรณ์","Warning !!!",JOptionPane.WARNING_MESSAGE);
            if(n == JOptionPane.YES_OPTION) {
                this.upToJhcisButton.setEnabled(true);
                this.setVisible(false);
                MainForm.openConnectForm();
            } else {
                this.upToJhcisButton.setEnabled(true);
            }
        }
     /*   }else
            JOptionPane.showMessageDialog(this,
            "กรุณารอให้การทำงานเสร็จสิ้นก่อน",
            "Warning !!!",
            JOptionPane.WARNING_MESSAGE);*/
      
    }//GEN-LAST:event_upToJhcisButtonActionPerformed

    private void houseSelectListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_houseSelectListValueChanged
        // TODO add your handling code here:
        if(this.houseSelectList.getSelectedIndex() != -1){
            this.getHouseInformatiom("houseSelectList");

        }
}//GEN-LAST:event_houseSelectListValueChanged

    private void typeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeComboBoxItemStateChanged
        // TODO add your handling code here:
        if(this.TypeRadioButton.isSelected()){
            if(!this.typeComboBox.getSelectedItem().equals("แม่หลังคลอด")&&!this.typeComboBox.getSelectedItem().equals("หญิงตั้งครรภ์")){
            this.houseListModel.clear();
            ResultSet rs = Service.Service.connectionSQL.getResultSetHouseChronic(this.typeComboBox.getSelectedIndex()
                    , this.villageComboBox.getSelectedItem().toString().substring(0,8));
            System.out.println(this.villageComboBox.getSelectedItem().toString().substring(0,8));
            if(rs != null) {
                try {
                    while(rs.next()) {
                        this.houseListModel.addElement(rs.getString("hno"));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "ERROR : "+ex.getMessage());
                    Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(this.houseListModel.isEmpty()){
                    this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
                }
                this.houseList.setModel(this.houseListModel);
            } else {
                this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
                this.houseList.setModel(this.houseListModel);

            }
            }else{
                if(this.typeComboBox.getSelectedItem().equals("แม่หลังคลอด")){
                    this.ancdialog.setTitle("เลือกช่วงเวลาคลอด");
                }else{
                    this.ancdialog.setTitle("เลือกช่วงเวลาตั้งครรภ์");
                }
                this.ancdialog.setVisible(true);
            }
        }
        if(this.houseRadioButton.isSelected()){

        }
}//GEN-LAST:event_typeComboBoxItemStateChanged

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);
        ResultSet rs = null;
        if(this.searchTextField.getText().substring(0,1).matches("[0-9]")){
            System.out.println("Number");
            rs = Service.Service.connectionSQL.getSearchQuery(this.searchTextField.getText().toString(), this.villageComboBox.getSelectedItem().toString().substring(0,8));
        } else{
            String[] fname = new String[2];
            fname = this.searchTextField.getText().split(" ",2);
            System.out.println(fname.length);
            for(int i=0; i<fname.length; i++) {
                System.out.println(fname[i]);
            }
            System.out.println("Not Number");
            rs = Service.Service.connectionSQL.getSearchQuery(fname, this.villageComboBox.getSelectedItem().toString().substring(0,8));
        }
        try {
            if(!rs.next()){
                JOptionPane.showMessageDialog(this,
                        "ไม่พบบุคคลที่คุณค้นหา",
                        "Warning !!!",
                        JOptionPane.WARNING_MESSAGE);
            }else {
                rs.beforeFirst();
                while(rs.next()){
                    this.houseListModel.addElement(rs.getString("hno") +" : "+ rs.getString("fname") + " " + rs.getString("lname"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.houseList.setModel(this.houseListModel);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void exerciseRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_exerciseRadioButtonItemStateChanged
        // TODO add your handling code here:
        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);

        this.getRiskHouse();

    }//GEN-LAST:event_exerciseRadioButtonItemStateChanged

    private void smokingRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_smokingRadioButtonItemStateChanged
        // TODO add your handling code here:
        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);

        this.getRiskHouse();

    }//GEN-LAST:event_smokingRadioButtonItemStateChanged

    private void alcoholRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_alcoholRadioButtonItemStateChanged
        // TODO add your handling code here:
        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);

        this.getRiskHouse();

    }//GEN-LAST:event_alcoholRadioButtonItemStateChanged

    private void upToAndroidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upToAndroidButtonActionPerformed
        // TODO add your handling code here:
        String village = this.villageComboBox.getSelectedItem().toString();
        //if(!Service.Service.checkworking){
        DriveBehavior driveBehavior = new DriveBehavior();
        if(Service.Service.connectDeviceStatus) {
            if(!this.houseSelectListModel.isEmpty()) {
                try {
                    if (driveBehavior.checkDeviceExist(Service.Service.serialDeviceConnect)) {
                        boolean show = true;
                        this.timerLabel.setText("0");
                        this.logLabel.setText("");
                        this.upToAndroidButton.setEnabled(false);
                        this.setVisibleProgressComponent(show);
                        this.setVillageAndHouse();
                        JhcisToAndroid jhcisToAndroid = new JhcisToAndroid();
                        //jhcisToAndroid.innitInformation(this.houseSelectListModel, village);
                        System.out.println("VillageListSizeoooooooooooo : "+this.village.size());
                        System.out.println("HouseListSizeoooooooooooooo : "+this.house.size());
                        jhcisToAndroid.innitInformation2(this.village, this.house);
                        jhcisToAndroidThread = new Thread(jhcisToAndroid);
                        jhcisToAndroidThread.start();
                        Service.Service.checkworking = true;
                        //MainForm.transForm.setVisibleReportDialog(true);
                    }else{
                        JOptionPane.showMessageDialog(this, "ไม่พบอุปกรณ์ กรุณาตรวจสอบการเชื่อมต่อ");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else{
                JOptionPane.showMessageDialog(this, "กรุณาเลือกข้อมูลที่ต้องการนำเข้า");
            }

        } else {
            int n = JOptionPane.showConfirmDialog(this, "กรุณาทำการเชื่อมต่ออุปกรณ์","Warning !!!",JOptionPane.WARNING_MESSAGE);
            if(n == JOptionPane.YES_OPTION) {
                this.upToJhcisButton.setEnabled(true);
                this.setVisible(false);
                MainForm.openConnectForm();
            } else {
            }
        }
      /*  }
        else{
            JOptionPane.showMessageDialog(this,
            "กรุณารอให้ทำงานเสร็จสิ้นก่อน",
            "Warning !!!",
            JOptionPane.WARNING_MESSAGE);
        }*/
}//GEN-LAST:event_upToAndroidButtonActionPerformed

    private void AllRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AllRadioButtonItemStateChanged
        // TODO add your handling code here:
        this.hintLabel.setVisible(false);

        this.exerciseRadioButton.setVisible(false);
        this.alcoholRadioButton.setVisible(false);
        this.smokingRadioButton.setVisible(false);

        this.typeComboBox.setVisible(false);
        this.searchButton.setVisible(false);
        this.searchTextField.setVisible(false);

        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);

        if(this.AllRadioButton.isSelected() && this.villageComboBox.getSelectedIndex() != 0) {
            System.out.println("All Radiobutton Select");
            String query = "SELECT hno FROM house WHERE villcode = " + this.villageComboBox.getSelectedItem().toString().substring(0,8)
                    +" ORDER BY char_length(substr(hno,1,locate('/',concat(hno,'/'))-1)), hno ASC";
            ResultSet rs = Service.Service.connectionSQL.getResultSet(query);
            System.out.println("All Radiobutton Select");
            try {
                while(rs.next()) {
                    this.houseListModel.addElement(rs.getString("hno"));
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "ERROR : "+ex.getMessage());
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(this.houseListModel.isEmpty()){
                this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
            }
            this.houseList.setModel(this.houseListModel);
        }
}//GEN-LAST:event_AllRadioButtonItemStateChanged

    private void TypeRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TypeRadioButtonItemStateChanged
        // TODO add your handling code here:
        this.exerciseRadioButton.setVisible(false);
        this.alcoholRadioButton.setVisible(false);
        this.smokingRadioButton.setVisible(false);

        this.searchButton.setVisible(false);
        this.searchTextField.setVisible(false);

        this.hintLabel.setVisible(false);

        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);

        if(this.TypeRadioButton.isSelected()) {
            this.typeComboBox.removeAllItems();
            ResultSet rs;
            PreparedStatement pstmt;
            String query;
            this.typeComboBox.addItem("== เลือกประเภทผู้ป่วย ==");
            this.typeComboBox.addItem("หญิงตั้งครรภ์");
            this.typeComboBox.addItem("แม่หลังคลอด");
            this.typeComboBox.addItem("ผู้พิการ");
            /*query = "SELECT groupname From cdiseasechronic";
            try {
                pstmt = (PreparedStatement) Service.Service.connectionSQL.connection.prepareStatement(query);
                rs = pstmt.executeQuery();
                while(rs.next()) {
                    this.typeComboBox.addItem(rs.getString("groupname"));
                }
                this.houseList.setModel(typeList);
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }*/
            this.typeComboBox.setVisible(true);
        }
}//GEN-LAST:event_TypeRadioButtonItemStateChanged

    private void riskRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_riskRadioButtonItemStateChanged
        // TODO add your handling code here:
        if(this.riskRadioButton.isSelected()){
            this.exerciseRadioButton.setVisible(true);
            this.alcoholRadioButton.setVisible(true);
            this.smokingRadioButton.setVisible(true);
        }

        this.typeComboBox.setVisible(false);
        this.searchButton.setVisible(false);
        this.searchTextField.setVisible(false);

        this.hintLabel.setVisible(false);
    }//GEN-LAST:event_riskRadioButtonItemStateChanged

    private void houseRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_houseRadioButtonItemStateChanged
        // TODO add your handling code here:

        this.houseListModel.clear();
        this.houseList.setModel(this.houseListModel);
        this.typeComboBox.removeAllItems();
        this.typeComboBox.setVisible(false);

        if(this.houseRadioButton.isSelected()) {
            this.searchButton.setVisible(true);
            this.searchTextField.setVisible(true);
            this.hintLabel.setVisible(true);
        }
        this.exerciseRadioButton.setVisible(false);
        this.alcoholRadioButton.setVisible(false);
        this.smokingRadioButton.setVisible(false);


    }//GEN-LAST:event_houseRadioButtonItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.houseSelectListModel.clear();
        this.houseSelectList.setModel(this.houseSelectListModel);
}//GEN-LAST:event_jButton1ActionPerformed

    private void selectAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllButtonActionPerformed
        // TODO add your handling code here:
        int index = 0;
        if(this.houseRadioButton.isSelected()){
            String[] houseNo;
            for(int j=0; j<this.houseListModel.size(); j++){
                houseNo = this.houseListModel.getElementAt(j).toString().split("[ ][:]");
                this.houseSelectListModel.addElement(houseNo[0]);
            }
        }else{
            this.houseSelectListModel.addElement(this.villageComboBox.getSelectedItem().toString());
            for(int i=0; i<this.houseListModel.size(); i++) {
                this.houseSelectListModel.addElement("  - "+this.houseListModel.getElementAt(i));

            }
        }
        houseSelectList.setModel(this.houseSelectListModel);
}//GEN-LAST:event_selectAllButtonActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if(this.houseSelectList.getSelectedIndex() == -1) {

        } else {
            Object selectValues[] = this.houseSelectList.getSelectedValues();
             /*for(int i=0; i<this.dataSelectLists.size(); i++)
             {
                 System.out.println(selectValues[0].toString() + "==" + this.dataSelectLists.get(i));
                 if(selectValues[i].toString().equals(this.dataSelectLists.get(i)))
                 {
                     this.selectListModelUpToAndroid.remove(i);
                     this.dataSelectLists.remove(i);
                 }
             }*/
            if(!this.houseSelectList.getSelectedValue().toString().substring(0, 4).equals(this.pattern)){
                int indexSelect = houseSelectList.getSelectedIndex();
                this.houseSelectListModel.removeElementAt(indexSelect);
                while(this.houseSelectListModel.get(indexSelect).toString().substring(0, 4).equals(this.pattern)) {
                    this.houseSelectListModel.removeElementAt(indexSelect);
                }
            }else{
                for(int i=0; i<selectValues.length; i++) {
                    for(int j=0; j<this.houseSelectListModel.size(); j++) {
                        if(selectValues[i].equals(this.houseSelectListModel.getElementAt(j).toString())) {
                            this.houseSelectListModel.removeElementAt(j);
                        }
                    }

                }
            }
            this.houseSelectList.setModel(this.houseSelectListModel);
            selectAllButton.setEnabled(true);
        }
}//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(this.houseRadioButton.isSelected()){
            this.addhouseSearch();
        }else{
            this.aHouseAdd();
        }
}//GEN-LAST:event_jButton8ActionPerformed

    private void houseListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_houseListValueChanged
        // TODO add your handling code here:
        if(this.houseList.getSelectedIndex() != -1){
            this.getHouseInformatiom("houseList");
        }
    }//GEN-LAST:event_houseListValueChanged

    private void villageComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_villageComboBoxItemStateChanged
        // TODO add your handling code here:
        //this.houseSelectList.setModel(this.emptyList);
        this.houseList.setModel(this.emptyList);
        this.houseListModel.clear();
        if(this.AllRadioButton.isSelected()){
            this.AllRadioButtonItemStateChanged(evt);
        }else if(this.TypeRadioButton.isSelected()){
            this.typeComboBoxItemStateChanged(evt);
        }else if(this.riskRadioButton.isSelected()){
            this.smokingRadioButtonItemStateChanged(evt);
        }else if(this.houseRadioButton.isSelected()){
            //this.smokingRadioButtonItemStateChanged(evt);
            //this.getRiskHouse();
        }
        //this.houseSelectListModel.clear();
    }//GEN-LAST:event_villageComboBoxItemStateChanged

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.gisReportDialog.setVisible(false);
}//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // TODO add your handling code here:
            this.callAppoiForm();
            this.AppoiDialog.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
         this.sendSmsEvent();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            this.setUsernamePassword();
            this.appoiSettingDialog.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        try {
            // TODO add your handling code here:
            this.saveUsername();
            this.appoiSettingDialog.setVisible(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButton14ActionPerformed

    private void UploadAllVillageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadAllVillageActionPerformed
        // TODO add your handling code here:
        this.uploadAllVillageEvt();
    }//GEN-LAST:event_UploadAllVillageActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
         java.net.URI uri;
        try {
            uri = new java.net.URI("http://www.thsms.com/member/register");
            try {
                desktop.browse(uri);
            } catch (IOException ex) {

            }
        } catch (URISyntaxException ex) {

        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:

        Date date1 = new Date(this.jCalendarCombo2.getDate().toGMTString());
        Date date2 = new Date(this.jCalendarCombo3.getDate().toGMTString());
        SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
        System.out.println(dateformat.format(date1));
        System.out.println(dateformat.format(date2));
        String query = "";
        if(this.typeComboBox.getSelectedItem().equals("แม่หลังคลอด")){
        query = "SELECT hno FROM house JOIN "+
        "(SELECT DISTINCT person.hcode FROM person "+
        "JOIN (SELECT DISTINCT pid,pcucodeperson FROM `visitancpregnancy` WHERE edc > '"+dateformat.format(date1)+"' AND edc < '"+dateformat.format(date2)+"')t1 "+
        "ON person.pid = t1.pid AND person.pcucodeperson = t1.pcucodeperson)t2 "+
        "ON house.hcode = t2.hcode AND house.villcode in ('"+this.villageComboBox.getSelectedItem().toString().substring(0,8)+"') "+
        "ORDER BY char_length(substr(house.hno,1,locate('/',concat(house.hno,'/'))-1)), house.hno ASC";
        }else if(this.typeComboBox.getSelectedItem().equals("หญิงตั้งครรภ์")){
            query = "SELECT hno FROM house JOIN "+
        "(SELECT DISTINCT person.hcode FROM person "+
        "JOIN (SELECT DISTINCT pid,pcucodeperson FROM `visitancpregnancy` WHERE lmp > '"+dateformat.format(date1)+"' AND lmp < '"+dateformat.format(date2)+"')t1 "+
        "ON person.pid = t1.pid AND person.pcucodeperson = t1.pcucodeperson)t2 "+
        "ON house.hcode = t2.hcode AND house.villcode in ('"+this.villageComboBox.getSelectedItem().toString().substring(0,8)+"') "+
        "ORDER BY char_length(substr(house.hno,1,locate('/',concat(house.hno,'/'))-1)), house.hno ASC";
        }

        System.out.println(query);
        this.houseListModel.clear();
            ResultSet rs = Service.Service.connectionSQL.getResultSet(query);
            System.out.println(this.villageComboBox.getSelectedItem().toString().substring(0,8));
            if(rs != null) {
                try {
                    while(rs.next()) {
                        this.houseListModel.addElement(rs.getString("hno"));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "ERROR : "+ex.getMessage());
                    Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(this.houseListModel.isEmpty()){
                    this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
                }
                this.houseList.setModel(this.houseListModel);
            } else {
                this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
                this.houseList.setModel(this.houseListModel);

            }
            this.ancdialog.setVisible(false);
        
        
    }//GEN-LAST:event_jButton13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TransferForm().setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AllRadioButton;
    private javax.swing.JDialog AppoiDialog;
    private javax.swing.JRadioButton TypeRadioButton;
    private javax.swing.JDialog UpdateToAndroidDialog;
    private javax.swing.JButton UploadAllVillage;
    private javax.swing.JLabel actionLabel;
    private javax.swing.JLabel addr506countLabel;
    private javax.swing.JRadioButton alcoholRadioButton;
    private javax.swing.JDialog ancdialog;
    private javax.swing.JLabel apgcountLabel;
    private javax.swing.JLayeredPane appoiLayeredPane;
    private javax.swing.JDialog appoiSettingDialog;
    private javax.swing.JLayeredPane appoiSettingLayeredPane;
    private javax.swing.JTable appoiTable;
    private javax.swing.JLabel babypgcountLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel businessCountLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel ccbpcountLabel;
    private javax.swing.JDialog decryptDialog;
    private javax.swing.JProgressBar decryptProgressBar;
    private javax.swing.JLabel decryptTimeLabel;
    private javax.swing.JLabel dentalcountlabel;
    private javax.swing.JLabel epilabel;
    private javax.swing.JRadioButton exerciseRadioButton;
    private javax.swing.JLabel fpcountLabel;
    private javax.swing.JDialog gisReportDialog;
    private javax.swing.JLabel gisUpdateLabel;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel hospitalCountLabel;
    private javax.swing.JLabel houseCountLabel;
    private javax.swing.JLabel houseLabel;
    private javax.swing.JList houseList;
    private javax.swing.JRadioButton houseRadioButton;
    private javax.swing.JList houseSelectList;
    private javax.swing.JLabel houseTextLabel;
    private javax.swing.JLabel houseUpdateCountLabel;
    private javax.swing.JLabel housecountLabel;
    private javax.swing.JLabel hvisitcountLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private org.freixas.jcalendar.JCalendarCombo jCalendarCombo2;
    private org.freixas.jcalendar.JCalendarCombo jCalendarCombo3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane11;
    private javax.swing.JLayeredPane jLayeredPane14;
    private javax.swing.JLayeredPane jLayeredPane15;
    private javax.swing.JLayeredPane jLayeredPane16;
    private javax.swing.JLayeredPane jLayeredPane17;
    private javax.swing.JLayeredPane jLayeredPane18;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JLayeredPane jLayeredPane7;
    private javax.swing.JLayeredPane jLayeredPane8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel labbloodcountlabel;
    private javax.swing.JLabel logLabel;
    private javax.swing.JLabel mouthlabel;
    private javax.swing.JLabel nutritionlabel;
    private javax.swing.JLabel oldcountLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel personBehaviorupdateLabel;
    private javax.swing.JLabel personCountLabel;
    private javax.swing.JLabel personLabel;
    private javax.swing.JLabel personTextLabel;
    private javax.swing.JLabel personUpdateLabel;
    private javax.swing.JLabel personbehaviorCountLabel;
    private javax.swing.JLabel personbehaviorTextLabel;
    private javax.swing.JLabel persondeathLabel;
    private javax.swing.JLabel persondeathTextLabel;
    private javax.swing.JLabel persondeathUpdateLabel;
    private javax.swing.JLabel persongrowlabel;
    private javax.swing.JLabel personunableupdateLabel;
    private javax.swing.JTable pesonTable;
    private javax.swing.JLabel pgcountLabel;
    private javax.swing.JLabel picNumLabel;
    private javax.swing.JLabel pictureCountLabel;
    private javax.swing.JLabel pictureTextLabel;
    private javax.swing.JLabel poiCountLabel;
    private javax.swing.JRadioButton riskRadioButton;
    private javax.swing.JLabel schoolCountLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel seccondLabel;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JRadioButton smokingRadioButton;
    private javax.swing.JLabel specialdiseasecountLabel;
    private javax.swing.JLabel templeCountLabel;
    private javax.swing.JLabel timeTextLabel;
    private javax.swing.JLabel timerLabel;
    private javax.swing.JLayeredPane transferHeaderLayeredPane;
    private javax.swing.JProgressBar transferProgressBar;
    private javax.swing.JTabbedPane transferTabbedPane;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JButton upToAndroidButton;
    private javax.swing.JLayeredPane upToAndroidLayeredPane;
    private javax.swing.JDialog upToAndroidReportDialog;
    private javax.swing.JButton upToJhcisButton;
    private javax.swing.JButton upToJhcisButton1;
    private javax.swing.JDialog upToJhcisReportDialog;
    private javax.swing.JLabel updateLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel versionLabel;
    private javax.swing.JComboBox villageComboBox;
    private javax.swing.JLabel villageLabel;
    private static javax.swing.JList villageOnAndroidList;
    private javax.swing.JLabel villageUpToJhcisLabel;
    private javax.swing.JLabel visitCountLabel;
    private javax.swing.JLabel visitDrugUpdateLabel;
    private javax.swing.JLabel visitLabel;
    private javax.swing.JLabel visitTextLabel;
    private javax.swing.JLabel visitUpdateLabel;
    private javax.swing.JLabel visitdiagCountLabel;
    private javax.swing.JLabel visitdiagUpdateLabel;
    private javax.swing.JLabel visitdiagtextLabel;
    private javax.swing.JLabel visitdrugCountLabel;
    private javax.swing.JLabel visitdrugTextLabel;
    private javax.swing.JLabel waterCountLabel;
    private javax.swing.JLabel womancountLabel;
    // End of variables declaration//GEN-END:variables

    private void setbackground(JComponent component, String imagePath){
        ImageIcon earth = new ImageIcon(imagePath);
        JLabel backlabel = new JLabel(earth);
        component.add(backlabel, new Integer(Integer.MIN_VALUE));
        backlabel.setBounds(0, 0, earth.getIconWidth(), earth.getIconHeight());
    }

    private void setAllbg(){
        this.setbackground(this.transferHeaderLayeredPane,".\\src\\Image\\transfer_2.jpg");
        this.setbackground(this.jLayeredPane1,".\\src\\Image\\bg3.jpg");
        this.setbackground(this.upToAndroidLayeredPane,".\\src\\Image\\background_newer.jpg");
        this.setbackground(this.jLayeredPane8,".\\src\\Image\\background_newer.jpg");
        this.setbackground(this.jLayeredPane14,".\\src\\Image\\updateVillageList_bg.png");
        this.setbackground(this.jLayeredPane11,".\\src\\Image\\updateList_bg.png");
        this.setbackground(this.jLayeredPane4,".\\src\\Image\\bg_bg_210x130.png");
        this.setbackground(this.jLayeredPane5,".\\src\\Image\\bg_bg210x100.png");
        this.setbackground(this.jLayeredPane6,".\\src\\Image\\footer_newer.jpg");
        this.setbackground(this.jLayeredPane16,".\\src\\Image\\upToAndroidReport_bg.png");
        this.setbackground(this.jLayeredPane3,".\\src\\Image\\upToJReport_bg.png");
        this.setbackground(this.jLayeredPane17,".\\src\\Image\\decryptdialog_bg.png");
        this.setbackground(this.jLayeredPane2,".\\src\\Image\\upToJReport2_bg.png");
        this.setbackground(this.jLayeredPane18,".\\src\\Image\\gisReport_bg.jpg");
        this.setbackground(this.appoiLayeredPane,".\\src\\Image\\appoiDialog_bg.jpg");
        this.setbackground(this.appoiSettingLayeredPane,".\\src\\Image\\appoiSetting_bg.jpg");
        
    }

    private void getRiskHouse()
    {   if(this.exerciseRadioButton.isSelected() || this.alcoholRadioButton.isSelected() || this.smokingRadioButton.isSelected()){
            this.houseListModel.clear();
            ResultSet rs = null;
            boolean exerciseIsSelect = this.exerciseRadioButton.isSelected();
            boolean alcoholIsSelect = this.alcoholRadioButton.isSelected();
            boolean smokingIsSelect = this.smokingRadioButton.isSelected();
            rs = Service.Service.connectionSQL.getRiskQuery(exerciseIsSelect, alcoholIsSelect, smokingIsSelect, this.villageComboBox.getSelectedItem().toString().substring(0,8));
            try {
                while(rs.next())
                {
                    this.houseListModel.addElement(rs.getString("hno"));
                }
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "ERROR : "+ex.getMessage());
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(this.houseListModel.isEmpty()){
                this.houseListModel.addElement("   ---------- ไม่พบบ้าน ----------");
            }
            this.houseList.setModel(this.houseListModel);
        }
    }
    
    private void getHouseInformatiom(String whichList){
        String[][] data = new String[20][5];
        String[] columnName = {"ลำดับที่","รหัสบ้าน","คำนำหน้า","ชื่อ","นามสกุล"};
        String villcode = this.villageComboBox.getSelectedItem().toString().substring(0, 8);
        int rowcount = 0; 
        //TableModel tableModel = null;
        String hno = "";
       
            if("houseList".equals(whichList)){
               if(this.houseRadioButton.isSelected()){
                   String[] hNo  = this.houseList.getSelectedValue().toString().split("[ ][:]");
                   hno = hNo[0];
               }else{
                   try{
                   hno = this.houseList.getSelectedValue().toString();
                   }catch(Exception e)
                   { e.printStackTrace();}
            }
            }else{
                if(this.houseRadioButton.isSelected()){
                   String[] hNo  = this.houseSelectList.getSelectedValue().toString().split("[ ][:]");
                   hno = hNo[0];
               }else{
                   hno = this.houseSelectList.getSelectedValue().toString();
            }
            }
            ResultSet rs = Service.Service.connectionSQL.getPersonInformation(hno, villcode);
            try {

                while(rs.next())
                {
                    for(int i=0; i<=rs.getMetaData().getColumnCount(); i++){
                        if(i == 0){
                            data[rowcount][i] = Integer.toString(rowcount+1);

                        }else{
                            data[rowcount][i] = rs.getString(i);
                            //System.out.println(rs.getString(i));  
                        }
                    }
                    rowcount++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel tableModel = new DefaultTableModel(data,columnName);
            this.pesonTable.setModel(tableModel);
        
    }
    
  
    private void getVillageListUpToAndroid()
    {
        String query = "select villname,villcode from village";
        ResultSet rs  = null;
        rs = Service.Service.connectionSQL.getResultSet(query);
        try
        {
            while(rs.next())
            {
                villageModelUpToAndroid.addElement(rs.getString("villcode")+" : "+rs.getString("villname"));
                this.villageComboBox.addItem(rs.getString("villcode") + " : " + rs.getString("villname"));
            }
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }
    }
    
    public void getVillageUpToJhciss() throws SQLException
    {
        VillageBookInformationManager villageManager = new VillageBookInformationManager();
        villageManager.setFileURL("./FFC/village_books_information.ffc");
        ArrayList<String> villageCode = new ArrayList<>();
        villageCode = villageManager.getVillageBook(Service.Service.serialDeviceConnect);
       /* String villList = "";
        for(String villcode : villageCode){
            villList += villcode + ",";
        }*/
        //ConnectSQLite connect = new ConnectSQLite();
        DefaultListModel villageModelUpToJhcis = new DefaultListModel();
        for(int i=0; i<villageCode.size(); i++){
            String query = "SELECT villcode,villname FROM village WHERE villcode In ('"+villageCode.get(i).toString() +"')";
            ResultSet rs = Service.Service.connectionSQL.getResultSet(query);
            while(rs.next())
            {
                System.out.println(rs.getString("villcode") + " : " + rs.getString("villname"));
                villageModelUpToJhcis.addElement(rs.getString("villcode") + " : " + rs.getString("villname"));
                //System.out.println(villageModelUpToJhcis.getElementAt(0));
            }
        }
        villageOnAndroidList.setModel(villageModelUpToJhcis);
        //this.exporVillagetList.setModel(villageModelUpToJhcis);
    }

    public void getVillageUpToJhcis() throws SQLException, ClassNotFoundException{
        DefaultListModel villageModelUpToJhcis = new DefaultListModel();
        Service.Service.SQLiteConnection.connectSQLite(Service.Service.mJHCISPath);
        String queryVillagecode = "SELECT village.villcode,village.villname FROM village JOIN "
                + "(SELECT DISTINCT house.villcode FROM house)t1 ON t1.villcode = village.villcode";
        ResultSet rs = Service.Service.SQLiteConnection.getResultSet(queryVillagecode);
        while(rs.next()){
            villageModelUpToJhcis.addElement(rs.getString("villcode") + " : " + rs.getString("villname"));
        }
        Service.Service.SQLiteConnection.closeConnection();
        villageOnAndroidList.setModel(villageModelUpToJhcis);
    }
    
     public void setVisibleCancelButton(boolean set)
     {
         if(set)
         {
             this.cancelButton.setVisible(set);
         }
         else
         {
             this.cancelButton.setVisible(set);
         }
         
     }
     
     public void setValueTransferProgressBar(int value)
     {
         this.transferProgressBar.setValue(value);
     }
     
     public void setTextHouseLabel(String text)
     {
         this.houseLabel.setText(text);
     }
    
     public void setTextvillagelabel(String text)
     {
         this.villageLabel.setText(text);
     }
     
     public void setTextVisitLabel(String text)
     {
         this.visitLabel.setText(text);
     }
     
     public void setTextPersonLabel(String text)
     {
         this.personLabel.setText(text);
     }
     
     public void setVisibleReportDialog(boolean set)
     {
         if(set)
            this.upToAndroidReportDialog.setVisible(set);
         else
            this.upToAndroidReportDialog.setVisible(set);
     }
         
     public void setTextPersonUpdateLabel(String text)
     {
         
         this.personUpdateLabel.setText(text);
     }
     
     public void setTextPersonBehaviorUpdateLabel(String text)
     {
        
         this.personBehaviorupdateLabel.setText(text);
     }
     
     public void setTextVisitUpdateLabel(String text)
     {
        
         this.visitUpdateLabel.setText(text);
     }
     
     public void setTextVisitDiagUpdateLabel(String text)
     {
        
         this.visitdiagUpdateLabel.setText(text);
     }
     
     public void setTextVisitdrugUpdateLabel(String text)
     {
       
         this.visitDrugUpdateLabel.setText(text);
     }

     public void setTextHouseUpdateLabel(String text){
         
         this.gisUpdateLabel.setText(text);
     }

     public void setTextPicNumLabel(String text){
        
         this.picNumLabel.setText(text);
     }
     
     public void controlJhcisToAndroidThread()
     {
         this.jhcisToAndroidThread.stop();
     }
     
     public void setVisibleUpTOJhcisReportDialog(boolean set)
     {
         this.upToJhcisReportDialog.setVisible(set);
     }
     
     public void setTextLogLabel(String text)
     {
         if(text.length() > 50){
            this.logLabel.setText(text.substring(0, 50) + "...");
         }else{
            this.logLabel.setText(text + "...");              
         }
     }

     public void setDefaultLogLabel()
     {
        this.logLabel.setText("");
     }
     
     public void setTextvillageUpToJhcis(String text)
     {
         this.villageUpToJhcisLabel.setText(text);
     }
     
     public Thread getUpToAndroidThread()
     {
         return this.jhcisToAndroidThread;
     }
     
     public Thread getUpToJhcisThread()
     {
         return this.andoirdToJhcisThread;
     }
     
     public void setTexttimerLabel(String text)
     {
         this.timerLabel.setText(text);
     }
     
     public int getSelectIndexTypeCombobox()
     {
         return this.typeComboBox.getSelectedIndex();
     }

     public void setEnableUpToJhcisButton(boolean set){
         this.upToJhcisButton.setEnabled(set);
     }
     private void setfont(){

         SetFont setFont = new SetFont();
         setFont.changeFont("THSarabun Bold.ttf",18f,this.villageComboBox,this.TypeRadioButton,this.AllRadioButton,
                           this.alcoholRadioButton,this.exerciseRadioButton,this.riskRadioButton,
                           this.houseRadioButton,this.typeComboBox,this.smokingRadioButton,
                           this.houseList,this.searchButton,this.pesonTable.getTableHeader(),
                           this.houseSelectList,this.jLabel6,this.jLabel8,this.jLabel9,
                           this.jLabel10,this.jLabel11,this.jLabel12,this.jLabel13,this.jLabel2,
                           this.jLabel3,this.jLabel4,this.jLabel5,this.jLabel27,
                           this.jLabel28,this.jLabel29,this.jLabel30,this.jLabel31,
                           this.jLabel14,this.jLabel15,villageOnAndroidList,this.villageUpToJhcisLabel
                           ,this.jLabel16,this.jLabel17,this.jLabel18,this.jLabel19,this.jLabel20,this.jLabel24
                           ,this.jLabel36,this.jLabel26,this.jLabel37,this.jButton2,this.villageLabel,this.jButton6
                           ,this.jLabel38,this.jLabel39,this.jLabel61,this.jLabel87
                           
                           //,
                           /*this.villageLabel,this.personLabel,this.visitLabel,this.houseLabel*/);
        setFont.changeFont("THSarabun Bold.ttf",19f,this.houseTextLabel,this.personTextLabel,this.personbehaviorTextLabel,this.visitTextLabel
                           ,this.visitdiagtextLabel,this.visitdrugTextLabel,this.jLabel2,this.jLabel3,this.jLabel4,this.jLabel5
                           ,this.jLabel21,this.jLabel22,this.pictureTextLabel,this.jLabel45,this.jLabel42,this.persondeathTextLabel,this.jLabel63);
        setFont.changeFont("THSarabun Bold.ttf",16f, this.hintLabel,this.actionLabel,this.logLabel);
        setFont.changeFont("THSarabun.ttf", 17f, this.pesonTable);
        setFont.changeFont("THSarabun Bold.ttf", 22f,this.updateLabel,this.jLabel23,this.jLabel43);
        
     }
     
     public void setUpdateCount() throws ClassNotFoundException, SQLException{
         ConvertSQLiteToSQL convert = new ConvertSQLiteToSQL();
         ArrayList<String> listUpdate = new ArrayList<>();
         listUpdate = convert.checkUpdate();

         AdbCommand adbCommand = new AdbCommand();
        try {
            adbCommand.createDirectoryOnAndroid(Service.Service.serialDeviceConnect,"/sdcard/Android/data/th.in.ffc/pictures/person");
        } catch (IOException ex) {
            Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Update Report Error : "+ ex.getMessage());
        }
         String personUpdateCount = listUpdate.get(0);
         String personbehaviorUpdateCount = listUpdate.get(1);
         String houseUpdateCount = listUpdate.get(2);
         String visitUpdateCount = listUpdate.get(3);
         String visitdiagUpdateCount = listUpdate.get(4);
         String visitdrugUpdateCount = listUpdate.get(5);
         String persondeathUpdateCount = listUpdate.get(6);
         String picUpdateCount = String.valueOf(adbCommand.getFileListAndroid("/sdcard/Android/data/th.in.ffc/pictures/person").size());
         this.personCountLabel.setText(personUpdateCount);
         this.persondeathLabel.setText(persondeathUpdateCount);
         this.personbehaviorCountLabel.setText(personbehaviorUpdateCount);
         this.houseCountLabel.setText(houseUpdateCount);
         this.visitCountLabel.setText(visitUpdateCount);
         this.visitdiagCountLabel.setText(visitdiagUpdateCount);
         this.visitdrugCountLabel.setText(visitdrugUpdateCount);
         this.pictureCountLabel.setText(picUpdateCount);
     }

     public void setVisibleProgressComponent(boolean set){
         this.transferProgressBar.setVisible(set);
         this.cancelButton.setVisible(set);
         this.logLabel.setVisible(set);
         this.actionLabel.setVisible(set);
         this.timerLabel.setVisible(set);
         this.timeTextLabel.setVisible(set);
         this.seccondLabel.setVisible(set);
         this.transferProgressBar.setValue(0);
         this.timerLabel.setText("0");
         this.logLabel.setText("");
     }

     public void setEnableComponent(boolean set){
         //this.backButton.setEnabled(set);
         
     }

     Point getScreenLocation(MouseEvent e) {
    Point cursor = e.getPoint();
    Point target_location = this.getLocationOnScreen();
    return new Point((int) (target_location.getX() + cursor.getX()),
        (int) (target_location.getY() + cursor.getY()));
    }

    public void clearVillageOnAndroidList(){
        DefaultListModel listModel = new DefaultListModel();
        this.villageOnAndroidList.setModel(listModel);
    }

    public void resetValueLabelUpdate(){
        this.personCountLabel.setText("0");
        this.personbehaviorCountLabel.setText("0");
        this.visitCountLabel.setText("0");
        this.visitdiagCountLabel.setText("0");
        this.visitdrugCountLabel.setText("0");
        this.houseCountLabel.setText("0");
        this.pictureCountLabel.setText("0");
        this.persondeathLabel.setText("0");
    }

  /*  private void setVisibleExportComponent(){
        //this.exporVillagetList.setVisible(false);
        this.exportButton.setVisible(false);
        this.jLabel33.setVisible(false);
        this.jLabel34.setVisible(false);
        this.exportPathTextField.setVisible(false);
        this.jLayeredPane12.setVisible(false);
        this.jButton5.setVisible(false);
        this.CommaRadioButton.setVisible(false);
        this.pipeRadioButton.setVisible(false);
       
    }*/

   /* private void setVisibleImportComponent(){
        this.jLabel35.setVisible(false);
        this.importPathTextField.setVisible(false);
        this.jButton12.setVisible(false);
        this.jLayeredPane13.setVisible(false);
        this.importButton.setVisible(false);
    }*/

    public void setVisibleDecryptDialog(boolean set){
        this.decryptDialog.setVisible(set);
    }


    public void setTextDecryptTimeLabel(String time){
        this.decryptTimeLabel.setText(time);
    }

    public void setEnableUpToAndroidButton(boolean set){
        this.upToAndroidButton.setEnabled(set);
    }

    public void decryptDatabase(){
        int upToJhcisTabIndex = 1;
        if(this.transferTabbedPane.getSelectedIndex() == upToJhcisTabIndex)
        {
            this.decryptTimeLabel.setText("0");
            Transfer.DecryptDatabaseUpToJhcis decrypt = new Transfer.DecryptDatabaseUpToJhcis();
            Thread decryptThread = new Thread(decrypt);
            decrypt.getDecryptThread(decryptThread);
            decryptThread.start();
            //this.decryptDialog.setVisible(true);
        }
    }

    private void aHouseAdd(){
        DefaultListModel tempList = new DefaultListModel();
        //tempList = this.houseSelectListModel;
        int houseListSize = this.houseSelectListModel.getSize();
        int subtituteIndex = 0;
        boolean checkFound = false;
        if(this.houseList.getSelectedIndex() != -1)
        {
            Object selectValues = this.houseList.getSelectedValue();
            this.dataSelectLists.clear();
          /*  for(int i=0; i<selectValues.length; i++)
            {
                this.dataSelectLists.add(selectValues[i].toString());
            }*/
            if(this.houseRadioButton.isSelected()){
               /* String[] houseNo;
                for(int j=0; j<selectValues.length; j++){
                    houseNo = selectValues[j].toString().split("[ ][:]");
                    this.houseSelectListModel.addElement(houseNo[0]);*/
                
            }else{
                for(int j=0; j<houseListSize; j++){
                    System.out.println("Select Item = " + this.villageComboBox.getSelectedItem().toString()
                            + " : " + this.houseSelectListModel.getElementAt(j).toString());
                    if(this.villageComboBox.getSelectedItem().toString() == null ? this.houseSelectListModel.getElementAt(j).toString()
                       == null : this.villageComboBox.getSelectedItem().toString().equals(this.houseSelectListModel.getElementAt(j).toString())){
                       System.out.println("add 1 : " + this.houseSelectListModel.getElementAt(j).toString());

                        tempList.addElement(this.houseSelectListModel.getElementAt(j).toString());

                      for(int k=j+1; k<houseListSize; k++){
                         if(k==houseListSize-1 || !this.houseSelectListModel.get(k).toString().substring(0, 4).equals(this.pattern)){
                             System.out.println("add 2 : "+"  - "+this.houseList.getSelectedValue().toString());
                             //tempList.addElement(this.houseSelectListModel.getElementAt(k).toString());
                             tempList.addElement("  - "+this.houseList.getSelectedValue().toString());
                             subtituteIndex = k;
                             break;
                         }else{
                             System.out.println("add 3 : "+this.houseSelectListModel.getElementAt(k).toString());
                             tempList.addElement(this.houseSelectListModel.getElementAt(k).toString());
                         }
                      }
                      for(int i=subtituteIndex; i<houseListSize; i++){
                          System.out.println("add 4 : "+this.houseSelectListModel.get(i).toString());
                          tempList.addElement(this.houseSelectListModel.get(i).toString());
                      }
                        //this.houseSelectListModel.clear();
                        checkFound = true;
                        /*for(int i=0; i<tempList.size(); i++){
                            this.houseSelectListModel.addElement(tempList.get(i).toString());
                        }*/
                        this.houseSelectListModel = tempList;
                        break;
                }else{
                        System.out.println("add 5 : "+this.houseSelectListModel.getElementAt(j).toString());
                      tempList.addElement(this.houseSelectListModel.getElementAt(j).toString());
                }
            }
                if(!checkFound){
                    System.out.println("YYYYYYYYYYYYYYYYYYYYYYYYYYY");
                    this.houseSelectListModel.addElement(this.villageComboBox.getSelectedItem().toString());
                    this.houseSelectListModel.addElement("  - "+this.houseList.getSelectedValue().toString());
                    //tempList.addElement(this.villageComboBox.getSelectedItem().toString());
                    //tempList.addElement("  - "+this.houseList.getSelectedValue().toString());
                    checkFound = false;
                    
                }
               
          }
            this.houseSelectList.setModel(this.houseSelectListModel);
    }
        else
        {
            JOptionPane.showMessageDialog(this, "กรุณาเลือกข้อมูลที่ต้องการนำเข้า","Waring !!!",JOptionPane.WARNING_MESSAGE);
        }
    }

    private void addhouseSearch(){
        DefaultListModel tempList = new DefaultListModel();
        //tempList = this.houseSelectListModel;
        int houseListSize = this.houseSelectListModel.getSize();
        int subtituteIndex = 0;
        boolean checkFound = false;
        if(this.houseList.getSelectedIndex() != -1)
        {
            Object selectValues = this.houseList.getSelectedValue();
            this.dataSelectLists.clear();
          /*  for(int i=0; i<selectValues.length; i++)
            {
                this.dataSelectLists.add(selectValues[i].toString());
            }*/
                for(int j=0; j<houseListSize; j++){
                    System.out.println("Select Item = " + this.villageComboBox.getSelectedItem().toString()
                            + " : " + this.houseSelectListModel.getElementAt(j).toString());
                    if(this.villageComboBox.getSelectedItem().toString() == null ? this.houseSelectListModel.getElementAt(j).toString()
                       == null : this.villageComboBox.getSelectedItem().toString().equals(this.houseSelectListModel.getElementAt(j).toString())){
                       System.out.println("add 1 : " + this.houseSelectListModel.getElementAt(j).toString());

                        tempList.addElement(this.houseSelectListModel.getElementAt(j).toString());

                      for(int k=j+1; k<houseListSize; k++){
                         if(k==houseListSize-1 || !this.houseSelectListModel.get(k).toString().substring(0, 4).equals(this.pattern)){
                             System.out.println("add 2 : "+"  - "+this.houseList.getSelectedValue().toString().split(":")[0].trim());
                             //tempList.addElement(this.houseSelectListModel.getElementAt(k).toString());
                             tempList.addElement("  - "+this.houseList.getSelectedValue().toString().split(":")[0].trim());
                             subtituteIndex = k;
                             break;
                         }else{
                             System.out.println("add 3 : "+this.houseSelectListModel.getElementAt(k).toString());
                             tempList.addElement(this.houseSelectListModel.getElementAt(k).toString());
                         }
                      }
                      for(int i=subtituteIndex; i<houseListSize; i++){
                          System.out.println("add 4 : "+this.houseSelectListModel.get(i).toString());
                          tempList.addElement(this.houseSelectListModel.get(i).toString());
                      }
                        //this.houseSelectListModel.clear();
                        checkFound = true;
                        /*for(int i=0; i<tempList.size(); i++){
                            this.houseSelectListModel.addElement(tempList.get(i).toString());
                        }*/
                        this.houseSelectListModel = tempList;
                        break;
                }else{
                        System.out.println("add 5 : "+this.houseSelectListModel.getElementAt(j).toString());
                      tempList.addElement(this.houseSelectListModel.getElementAt(j).toString());
                }
            }
                if(!checkFound){
                    System.out.println("YYYYYYYYYYYYYYYYYYYYYYYYYYY");
                    this.houseSelectListModel.addElement(this.villageComboBox.getSelectedItem().toString());
                    this.houseSelectListModel.addElement("  - "+this.houseList.getSelectedValue().toString().split(":")[0].trim());
                    //tempList.addElement(this.villageComboBox.getSelectedItem().toString());
                    //tempList.addElement("  - "+this.houseList.getSelectedValue().toString());
                    checkFound = false;

                }

          
            this.houseSelectList.setModel(this.houseSelectListModel);
    }
        else
        {
            JOptionPane.showMessageDialog(this, "กรุณาเลือกข้อมูลที่ต้องการนำเข้า","Waring !!!",JOptionPane.WARNING_MESSAGE);
        }
    }

    private void setVillageAndHouse(){
        //ArrayList<ArrayList<String>> villageAndHouse = new ArrayList<ArrayList<String>>();
        //ArrayList<String> village =  new ArrayList<String>();
        this.village.clear();
        this.house.clear();
        ArrayList<String> houseTemp =  new ArrayList<>();
        int houseSelectListSize = this.houseSelectListModel.size();
        for(int i = 0; i<houseSelectListSize; i++){
            if(houseSelectListModel.getElementAt(i).toString().substring(0, 4)
               == null ? this.pattern == null : !houseSelectListModel.getElementAt(i).toString().substring(0, 4).equals(this.pattern)){
                //houseTemp.add(this.houseSelectListModel.getElementAt(i).toString());
                //Add village name
                this.village.add(this.houseSelectListModel.get(i).toString().substring(0,8));
                
                if(houseTemp.size() > 0){
                    //If houseTemp have data then add it into villageAndHouse
                    //and clear houseTemp
                  this.house.add(houseTemp);
                   houseTemp =  new ArrayList<>();
                }
            }else{
                houseTemp.add(this.houseSelectListModel.get(i).toString().substring(4));
            }
        }
        this.house.add(houseTemp);
    }

    public void setUpdateLabel(){
        this.housecountLabel.setText(Integer.toString(Service.Service.updateCount.houseCount));
        this.persondeathUpdateLabel.setText(Integer.toString(Service.Service.updateCount.persondeathCount));
        this.personBehaviorupdateLabel.setText(Integer.toString(Service.Service.updateCount.personbehaviorCount));
        this.personunableupdateLabel.setText(Integer.toString(Service.Service.updateCount.personunableCount));

        this.fpcountLabel.setText(Integer.toString(Service.Service.updateCount.familyPlanCount));
        this.ccbpcountLabel.setText(Integer.toString(Service.Service.updateCount.ccbpCount));
        this.pgcountLabel.setText(Integer.toString(Service.Service.updateCount.pgCount));
        this.apgcountLabel.setText(Integer.toString(Service.Service.updateCount.apgCount));
        this.babypgcountLabel.setText(Integer.toString(Service.Service.updateCount.babypgCount));
        
        this.womancountLabel.setText(Integer.toString(Service.Service.updateCount.womanCount));
        this.oldcountLabel.setText(Integer.toString(Service.Service.updateCount.oldCount));
        this.addr506countLabel.setText(Integer.toString(Service.Service.updateCount.Addr506Count));
        
        this.hvisitcountLabel.setText(Integer.toString(Service.Service.updateCount.hvisitCount));
        this.specialdiseasecountLabel.setText(Integer.toString(Service.Service.updateCount.specialDiseaseCount));
        this.dentalcountlabel.setText(Integer.toString(Service.Service.updateCount.dentalCount));
        this.labbloodcountlabel.setText(Integer.toString(Service.Service.updateCount.labBloodCount));

        this.persongrowlabel.setText(Integer.toString(Service.Service.updateCount.persongrow));
        this.nutritionlabel.setText(Integer.toString(Service.Service.updateCount.nutritionCount));
        this.mouthlabel.setText(Integer.toString(Service.Service.updateCount.mouthCount));
        this.epilabel.setText(Integer.toString(Service.Service.updateCount.epiCount));

        this.businessCountLabel.setText(String.valueOf(Service.Service.updateCount.villbusinessCount));
        this.schoolCountLabel.setText(String.valueOf(Service.Service.updateCount.villschoolCount));
        this.waterCountLabel.setText(String.valueOf(Service.Service.updateCount.villwaterCount));
        this.templeCountLabel.setText(String.valueOf(Service.Service.updateCount.villtempleCount));
        this.poiCountLabel.setText(String.valueOf(Service.Service.updateCount.poiCount));
        this.hospitalCountLabel.setText(String.valueOf(Service.Service.updateCount.hospitalCount));
        this.houseUpdateCountLabel.setText(String.valueOf(Service.Service.updateCount.houseCount));
        this.gisUpdateLabel.setText(String.valueOf(this.sumGisCount()));
    }

    public void setVisibleUpdateToJhcisDialog(boolean set){
        this.UpdateToAndroidDialog.setVisible(set);
    }

    private int sumGisCount(){
        int sum = 0;
        sum = Service.Service.updateCount.villbusinessCount + Service.Service.updateCount.villschoolCount + Service.Service.updateCount.villtempleCount +
                Service.Service.updateCount.villwaterCount + Service.Service.updateCount.poiCount + Service.Service.updateCount.hospitalCount + Service.Service.updateCount.houseCount;

        System.out.println("Sum GIS : "+sum);
        return sum;
    }

    private void callAppoiForm() throws SQLException{
         String query = "SELECT person.fname,person.lname,person.telephoneperson,t1.appointtype,t1.appointdate FROM person "
                 + "JOIN (SELECT visitdiag.appointdate,visitdiag.appointtype,visit.pid FROM visitdiag "
                 + "JOIN visit ON visitdiag.appointdate > CURRENT_DATE AND visit.visitno = visitdiag.visitno)t1 "
                 + "ON person.pid = t1.pid AND person.telephoneperson!='null' AND person.telephoneperson!='' ORDER BY t1.appointdate DESC";
         ResultSet rs = Service.Service.connectionSQL.getResultSet(query);
         rs.last();
         int row = rs.getRow();
         int column = rs.getMetaData().getColumnCount();
         System.out.println("column : "+column);
         System.out.println("row : "+row);
         int rowcount = 0;
         Object[][] data = new String[row][column];
         String[] columnName = {"ชื่อ","นามสกุล","เบอร์โทรศัพท์","นัดหมาย","วันที่นัด"};
         rs.beforeFirst();
         try {
                while(rs.next())
                {
                    for(int i=0; i<column; i++){
                        if(i==3){
                            data[rowcount][i] = this.getappoitype(rs.getString(i+1));
                        }else{
                            data[rowcount][i] = rs.getString(i+1);
                        }
                    }
                    
                    rowcount++;
                    System.out.println(rowcount);
                }
            } catch (SQLException ex) {
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel tableModel = new DefaultTableModel(data,columnName);
            this.appoiTable.setModel(tableModel);
    }

    public void sendSmsEvent(){
        ListSelectionModel model = this.appoiTable.getSelectionModel();
        int rowIndex = model.getMaxSelectionIndex();
        //int columns = this.appoiTable.getColumnCount();
        String s = "";
        String username = "";
        String password = "";
        String fname = "";
        String lname = "";
        String telephone = "";
        String appoitype = "";
        String appoidate = "";
        String hospitalname = "";
        if(rowIndex == -1){
            JOptionPane.showMessageDialog(this, "กรุณาเลือกคนที่ต้องการส่ง");
        }else{
            try {
                /*for(int col = 0; col < columns; col++)
                {
                Object o = this.appoiTable.getValueAt(rowIndex, col);
                s += o.toString();
                if(col < columns - 1)
                s += ", ";
                }*/
                fname = this.appoiTable.getValueAt(rowIndex, 0).toString();
                lname = this.appoiTable.getValueAt(rowIndex, 1).toString();
                telephone = this.appoiTable.getValueAt(rowIndex, 2).toString();
                appoitype = this.appoiTable.getValueAt(rowIndex, 3).toString();
                appoidate = this.appoiTable.getValueAt(rowIndex, 4).toString();
                hospitalname = Service.Service.connectionSQL.getHosName();
                username = this.usernameTextField.getText();
                password = this.passwordTextField.getText();
            } catch (SQLException ex) {
                Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        SendSms.SendSms sendsms = new SendSms.SendSms(username, password, fname, lname, telephone, appoitype, appoidate, hospitalname);
        if(sendsms.send()){
            JOptionPane.showMessageDialog(this, "ส่งข้อความสำเร็จ");
        }else{
            JOptionPane.showMessageDialog(this, "ส่งข้อความล้มเหลว");
        }
        System.out.println(s);

    }

    private String getappoitype(String appoitype){
        if(appoitype.equals("1")){
            return "รับยา";
        }else if(appoitype.equals("2")){
            return "ฟังผล";
        }else if(appoitype.equals("3")){
            return "ทำแผล";
        }else if(appoitype.equals("4")){
            return "เจาะเลือด";
        }else if(appoitype.equals("5")){
            return "ตรวจน้ำตาล";
        }else if(appoitype.equals("6")){
            return "วัดความดัน";
        }else{
            return "ไม่ทราบ";
        }
    }

    private void saveUsername() throws ClassNotFoundException, SQLException{
        String update = "UPDATE sms_login SET username ='"+this.usernameTextField.getText()+"' ,password ='"+this.passwordTextField.getText()+"'";
        ConnectSQLite connection = new ConnectSQLite();
        connection.connectSQLite(Service.Service.ffcInformationPath);
        Statement stm = connection.SQLiteConnection.createStatement();
        stm.executeUpdate(update);
        connection.closeConnection();
    }

    private void setUsernamePassword() throws ClassNotFoundException, SQLException{
        String select = "SELECT username,password FROM sms_login";
        ConnectSQLite connection = new ConnectSQLite();
        connection.connectSQLite(Service.Service.ffcInformationPath);
        Statement stm = connection.SQLiteConnection.createStatement();
        ResultSet rs = stm.executeQuery(select);
        while(rs.next()){
            this.usernameTextField.setText(rs.getString("username"));
            this.passwordTextField.setText(rs.getString("password"));
        }
        connection.closeConnection();
    }

    public void setvillageLabel(){
        int size = this.village.size();
        String houselabel = "";
        String tooltip = "<html>";
        for(int i=0;i<size;i++){
            if(i<2){
                houselabel += this.village.get(i)+", ";
            }else{
                if(i==3){
                    houselabel +="more...";
                }
                tooltip += this.village.get(i)+",<br>";
            }

        }
        this.villageLabel.setText(houselabel);
        this.villageLabel.setToolTipText(tooltip+"</html>");
    }

    public void setAllvillageLabel(){
        int size = this.villageComboBox.getItemCount();
        String houselabel = "";
        String tooltip = "<html>";
        for(int i=1;i<size;i++){
            if(i<2){
                houselabel += this.villageComboBox.getItemAt(i)+", ";
            }else{
                if(i==3){
                    houselabel +="more...";
                }
                tooltip += this.villageComboBox.getItemAt(i)+",<br>";
            }

        }
        this.villageLabel.setText(houselabel);
        this.villageLabel.setToolTipText(tooltip+"</html>");
    }

    public void setvillageAndroidLabel() throws SQLException, ClassNotFoundException{
         Service.Service.SQLiteConnection.connectSQLite(Service.Service.mJHCISPath);
         int count = 0;
         String villageOnAndroid = "";
         String villageTooltip = "<html>";
         String query = "SELECT DISTINCT villcode,villname FROM (SELECT DISTINCT * FROM village JOIN house ON village.villcode = house.villcode)";
         ResultSet rs = null;
         rs = Service.Service.SQLiteConnection.getResultSet(query);
            while(rs.next())
            {
                if(count<2){
                    villageOnAndroid += rs.getString("villname") + ", ";
                }else{
                    if(count==3){
                        villageOnAndroid +="more...";
                    }
                    villageTooltip += rs.getString("villname")+",<br>";
                }
                count++;
            }
         this.villageUpToJhcisLabel.setText(villageOnAndroid);
         this.villageUpToJhcisLabel.setToolTipText(villageTooltip);
         Service.Service.SQLiteConnection.closeConnection();

    }

    private void setVersion(){
        this.versionLabel.setText("Version "+Service.Service.autosyncVersion);
    }

    private void uploadAllVillageEvt(){
        String village = this.villageComboBox.getSelectedItem().toString();
        //if(!Service.Service.checkworking){
        DriveBehavior driveBehavior = new DriveBehavior();
        if(Service.Service.connectDeviceStatus) {
                try {
                    if (driveBehavior.checkDeviceExist(Service.Service.serialDeviceConnect)) {
                        boolean show = true;
                        this.timerLabel.setText("0");
                        this.logLabel.setText("");
                        this.upToAndroidButton.setEnabled(false);
                        this.setVisibleProgressComponent(show);
                        this.setVillageAndHouse();
                        JhcisToAndroid jhcisToAndroid = new JhcisToAndroid();

                        jhcisToAndroid.innitInformation2(this.village, this.house);
                        jhcisToAndroidThread = new Thread(jhcisToAndroid);
                        jhcisToAndroidThread.start();
                        
                        Service.Service.checkworking = true;

                    }else{
                        JOptionPane.showMessageDialog(this, "ไม่พบอุปกรณ์ กรุณาตรวจสอบการเชื่อมต่อ");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(TransferForm.class.getName()).log(Level.SEVERE, null, ex);
                }
        } else {
            int n = JOptionPane.showConfirmDialog(this, "กรุณาทำการเชื่อมต่ออุปกรณ์","Warning !!!",JOptionPane.WARNING_MESSAGE);
            if(n == JOptionPane.YES_OPTION) {
                this.upToJhcisButton.setEnabled(true);
                this.setVisible(false);
                MainForm.openConnectForm();
            } else {
            }
        }
    }
}


